{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\AlgorithmVisualizer\\\\src\\\\convexHullComponents\\\\canvas.jsx\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport { convex_hull } from \"../algorithms/grahamScan\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dots: [],\n      lines: [],\n      canvasWidth: 300,\n      canvasHeight: 100\n    };\n\n    this.animateLine = async () => {\n      const {\n        lines\n      } = this.state;\n      const canvas2 = this.canvasLineRef.current;\n      const ctx2 = canvas2.getContext('2d');\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      ctx2.fillStyle = '#ffffff';\n      ctx2.strokeStyle = '#ffffff';\n\n      for (let i = 0; i < lines.length; i++) {\n        if (!this.props.onGoing) {\n          ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n          return;\n        }\n\n        ctx2.beginPath();\n\n        if (lines[i].add) {\n          ctx2.beginPath();\n          ctx2.lineWidth = 2;\n          ctx2.fillStyle = 'black';\n          ctx2.moveTo(lines[i].from.xx, lines[i].from.yy);\n          ctx2.arc(lines[i].from.xx, lines[i].from.yy, 14, 0, 2 * Math.PI);\n          ctx2.fill();\n          ctx2.closePath();\n          ctx2.beginPath();\n          ctx2.fillStyle = 'red';\n          ctx2.moveTo(lines[i].to.xx, lines[i].to.yy);\n          ctx2.arc(lines[i].to.xx, lines[i].to.yy, 14, 0, 2 * Math.PI);\n          ctx2.fill();\n          ctx2.closePath();\n          ctx2.beginPath();\n          ctx2.lineWidth = 2;\n          ctx2.strokeStyle = '#000000';\n        } else {\n          ctx2.beginPath();\n          ctx2.fillStyle = 'whitesmoke';\n          ctx2.moveTo(lines[i].from.xx, lines[i].from.yy);\n          ctx2.arc(lines[i].from.xx, lines[i].from.yy, 15, 0, 2 * Math.PI);\n          ctx2.fill();\n          ctx2.closePath();\n          ctx2.beginPath();\n          ctx2.fillStyle = 'whitesmoke';\n          ctx2.moveTo(lines[i].to.xx, lines[i].to.yy);\n          ctx2.arc(lines[i].to.xx, lines[i].to.yy, 15, 0, 2 * Math.PI);\n          ctx2.fill();\n          ctx2.closePath();\n          ctx2.lineWidth = 4;\n          ctx2.strokeStyle = 'whitesmoke';\n        }\n\n        ctx2.moveTo(lines[i].from.xx, lines[i].from.yy);\n        ctx2.lineTo(lines[i].to.xx, lines[i].to.yy);\n        ctx2.stroke();\n        ctx2.closePath();\n\n        if (i === lines.length - 1) {\n          this.props.onTurnOff();\n        }\n\n        await sleep(this.props.speed);\n      }\n    };\n\n    this.setState({\n      canvasWidth: window.innerWidth\n    });\n    this.setState({\n      canvasHeight: window.innerHeight - 10\n    });\n    console.log(window.innerWidth);\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.canvasLineRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.redrawDots(); // console.log(this.state.canvasWidth);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.dots !== prevProps.dots) {\n      this.setState({\n        dots: this.props.dots\n      });\n      this.redrawDots();\n    }\n\n    if (this.props.onGoing !== prevProps.onGoing) {\n      if (this.props.onGoing === true) {\n        this.animateLine();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerz\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          className: \"canvas\",\n          id: \"canvas1\",\n          style: {\n            backgroundColor: \"whitesmoke\"\n          },\n          ref: this.canvasLineRef,\n          width: window.innerWidth,\n          height: window.innerHeight - 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          className: \"canvas\",\n          id: \"canvas2\" // style={{backgroundColor:\"grey\"}}\n          ,\n          ref: this.myRef,\n          width: window.innerWidth,\n          height: window.innerHeight - 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n  redrawDots() {\n    const canvas = this.myRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = 'lightgrey';\n    ctx.strokeStyle = 'black';\n\n    for (let i = 0; i < this.props.dots.length; i++) {\n      ctx.beginPath(); // ctx.moveTo(this.props.dots[i].xx, this.props.dots[i].yy)\n\n      ctx.arc(this.props.dots[i].xx, this.props.dots[i].yy, 10, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.closePath();\n    const res = convex_hull(this.props.dots);\n    const cansvas2 = this.canvasLineRef.current;\n    const ctx2 = cansvas2.getContext('2d');\n    ctx2.clearRect(0, 0, canvas.width, canvas.height);\n    this.setState({\n      lines: res[1]\n    });\n  }\n\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Canvas;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/AlgorithmVisualizer/src/convexHullComponents/canvas.jsx"],"names":["React","Component","convex_hull","Canvas","constructor","props","state","dots","lines","canvasWidth","canvasHeight","animateLine","canvas2","canvasLineRef","current","ctx2","getContext","clearRect","width","height","fillStyle","strokeStyle","i","length","onGoing","beginPath","add","lineWidth","moveTo","from","xx","yy","arc","Math","PI","fill","closePath","to","lineTo","stroke","onTurnOff","sleep","speed","setState","window","innerWidth","innerHeight","console","log","myRef","createRef","componentDidMount","redrawDots","componentDidUpdate","prevProps","prevState","snapshot","render","textAlign","backgroundColor","canvas","ctx","res","cansvas2","ms","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './style.css';\r\nimport {convex_hull} from \"../algorithms/grahamScan\";\r\nclass Canvas extends Component {\r\n    state={\r\n        dots:[],\r\n        lines:[],\r\n        canvasWidth:300,\r\n        canvasHeight:100\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.setState({canvasWidth:window.innerWidth});\r\n        this.setState({canvasHeight:window.innerHeight-10});\r\n        console.log(window.innerWidth);\r\n        this.myRef = React.createRef();\r\n        this.canvasLineRef = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        this.redrawDots();\r\n       // console.log(this.state.canvasWidth);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if( this.props.dots!==prevProps.dots ){\r\n            this.setState({dots:this.props.dots});\r\n            this.redrawDots();\r\n        }\r\n        if( this.props.onGoing!==prevProps.onGoing ){\r\n            if( this.props.onGoing === true ){\r\n                this.animateLine();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign:\"center\"}}>\r\n                <div className=\"containerz\">\r\n                    <canvas\r\n                        className='canvas'\r\n                        id='canvas1'\r\n                        style={{backgroundColor:\"whitesmoke\"}}\r\n                        ref={this.canvasLineRef} width={window.innerWidth} height={window.innerHeight-200} />\r\n                    <canvas\r\n                        className='canvas'\r\n                        id='canvas2'\r\n                        // style={{backgroundColor:\"grey\"}}\r\n                        ref={this.myRef} width={window.innerWidth} height={window.innerHeight-200}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    redrawDots(){\r\n        const canvas = this.myRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.fillStyle = 'lightgrey';\r\n        ctx.strokeStyle = 'black';\r\n        for( let i = 0; i<this.props.dots.length;i++ ){\r\n            ctx.beginPath();\r\n           // ctx.moveTo(this.props.dots[i].xx, this.props.dots[i].yy)\r\n            ctx.arc(this.props.dots[i].xx, this.props.dots[i].yy, 10, 0, 2*Math.PI);\r\n            ctx.fill();\r\n            ctx.lineWidth = 2;\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n        }\r\n        ctx.closePath();\r\n        const res = convex_hull(this.props.dots);\r\n\r\n        const cansvas2 = this.canvasLineRef.current;\r\n        const ctx2 = cansvas2.getContext('2d');\r\n        ctx2.clearRect(0, 0, canvas.width, canvas.height);\r\n        this.setState({lines:res[1]});\r\n\r\n    }\r\n\r\n    animateLine = async () => {\r\n        const {lines} = this.state;\r\n        const canvas2 = this.canvasLineRef.current;\r\n        const ctx2 = canvas2.getContext('2d');\r\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n        ctx2.fillStyle = '#ffffff';\r\n        ctx2.strokeStyle = '#ffffff';\r\n        for( let i = 0; i<lines.length;i++ ){\r\n            if( !this.props.onGoing ){\r\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n                return;\r\n            }\r\n            ctx2.beginPath();\r\n            if( lines[i].add ){\r\n                ctx2.beginPath();\r\n                ctx2.lineWidth = 2;\r\n                ctx2.fillStyle = 'black';\r\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\r\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 14, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'red';\r\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\r\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 14, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.lineWidth = 2;\r\n                ctx2.strokeStyle = '#000000';\r\n            } else{\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'whitesmoke';\r\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\r\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 15, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'whitesmoke';\r\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\r\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 15, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.lineWidth = 4;\r\n                ctx2.strokeStyle = 'whitesmoke';\r\n            }\r\n\r\n            ctx2.moveTo(lines[i].from.xx, lines[i].from.yy);\r\n            ctx2.lineTo(lines[i].to.xx, lines[i].to.yy);\r\n            ctx2.stroke();\r\n            ctx2.closePath();\r\n            if( i === lines.length - 1 ){\r\n                this.props.onTurnOff();\r\n            }\r\n            await sleep(this.props.speed);\r\n        }\r\n    }\r\n\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}