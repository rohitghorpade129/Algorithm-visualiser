{"ast":null,"code":"import graph from\"./images/graph.png\";import primes from\"./images/primes.jpg\";import sort from\"./sort.png\";import queen from\"./images/queen.PNG\";import binSearch from\"./images/binaryTree.png\";import convex from'./images/convexHull.png';import puzzle from'./images/15puzzle.PNG';import sudoku from'./images/sudoku.png';export function getDetails(){return[{id:1,title:\"Pathfinder\",description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",route:\"/pathfinder\",img:graph},//    {\n//        id:2,\n//        title:\"Prime Numbers\",\n//        description:\"Visualize how Seive is better than brute force\",\n//        route:\"/prime\",\n//        img:primes\n//    },\n{id:3,title:\"Sorting Algorithm\",description:\"Compare different sorting algorithms\",route:\"/sort\",img:sort},//    {\n//        id:9,\n//        title:\"Recursive Sorting\",\n//        description:\"Compare different recursive sorting algorithms\",\n//        route:\"/recursivesort\",\n//        img:sort\n//    },\n//    {\n//        id:4,\n//        title:\"N Queen\",\n//        description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\n//        route:\"/nqueen\",\n//        img:queen\n//    },\n//    {\n//        id:5,\n//        title:\"Convex Hull\",\n//        description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\n//        route:\"/convexhull\",\n//        img:convex\n//    },\n{id:7,title:\"Binary Search\",description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",route:\"/binarysearch\",img:binSearch}//    {\n//        id:6,\n//        title:\"Sudoku\",\n//        description:\"Coming soon...\",\n//        route:\"/\",\n//        img:sudoku\n//    },\n//    {\n//        id:8,\n//        title:\"15 Puzzle\",\n//        description:\"Coming soon...\",\n//        route:\"/\",\n//        img:puzzle\n//    }\n];}","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/Algorithm-Visualizer/src/homeComponents/cardDetails.js"],"names":["graph","primes","sort","queen","binSearch","convex","puzzle","sudoku","getDetails","id","title","description","route","img"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAO,SAASC,CAAAA,UAAT,EAAqB,CACzB,MAAO,CACH,CACIC,EAAE,CAAC,CADP,CAEIC,KAAK,CAAC,YAFV,CAGIC,WAAW,CAAC,oDAHhB,CAIIC,KAAK,CAAC,aAJV,CAKIC,GAAG,CAACb,KALR,CADG,CAQN;AACA;AACA;AACA;AACA;AACA;AACA;AACG,CACIS,EAAE,CAAC,CADP,CAEIC,KAAK,CAAC,mBAFV,CAGIC,WAAW,CAAC,sCAHhB,CAIIC,KAAK,CAAC,OAJV,CAKIC,GAAG,CAACX,IALR,CAfG,CAsBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,CACIO,EAAE,CAAC,CADP,CAEIC,KAAK,CAAC,eAFV,CAGIC,WAAW,CAAC,wFAHhB,CAIIC,KAAK,CAAC,eAJV,CAKIC,GAAG,CAACT,SALR,CAOH;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAhEM,CAAP,CAmEF","sourcesContent":["import graph from \"./images/graph.png\";\r\nimport primes from \"./images/primes.jpg\";\r\nimport sort from \"./sort.png\";\r\nimport queen from \"./images/queen.PNG\";\r\nimport binSearch from \"./images/binaryTree.png\";\r\nimport convex from './images/convexHull.png';\r\nimport puzzle from './images/15puzzle.PNG';\r\nimport sudoku from './images/sudoku.png';\r\nexport function getDetails(){\r\n   return [\r\n       {\r\n           id:1,\r\n           title:\"Pathfinder\",\r\n           description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",\r\n           route:\"/pathfinder\",\r\n           img:graph\r\n       },\r\n    //    {\r\n    //        id:2,\r\n    //        title:\"Prime Numbers\",\r\n    //        description:\"Visualize how Seive is better than brute force\",\r\n    //        route:\"/prime\",\r\n    //        img:primes\r\n    //    },\r\n       {\r\n           id:3,\r\n           title:\"Sorting Algorithm\",\r\n           description:\"Compare different sorting algorithms\",\r\n           route:\"/sort\",\r\n           img:sort\r\n       },\r\n    //    {\r\n    //        id:9,\r\n    //        title:\"Recursive Sorting\",\r\n    //        description:\"Compare different recursive sorting algorithms\",\r\n    //        route:\"/recursivesort\",\r\n    //        img:sort\r\n    //    },\r\n    //    {\r\n    //        id:4,\r\n    //        title:\"N Queen\",\r\n    //        description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\r\n    //        route:\"/nqueen\",\r\n    //        img:queen\r\n    //    },\r\n    //    {\r\n    //        id:5,\r\n    //        title:\"Convex Hull\",\r\n    //        description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\r\n    //        route:\"/convexhull\",\r\n    //        img:convex\r\n    //    },\r\n       {\r\n           id:7,\r\n           title:\"Binary Search\",\r\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\r\n           route:\"/binarysearch\",\r\n           img:binSearch\r\n       },\r\n    //    {\r\n    //        id:6,\r\n    //        title:\"Sudoku\",\r\n    //        description:\"Coming soon...\",\r\n    //        route:\"/\",\r\n    //        img:sudoku\r\n    //    },\r\n\r\n    //    {\r\n    //        id:8,\r\n    //        title:\"15 Puzzle\",\r\n    //        description:\"Coming soon...\",\r\n    //        route:\"/\",\r\n    //        img:puzzle\r\n    //    }\r\n\r\n   ]\r\n}"]},"metadata":{},"sourceType":"module"}