{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\AlgorithmVisualizer\\\\src\\\\convexHullComponents\\\\convexHull.jsx\";\nimport React, { Component } from 'react';\nimport MyTimer from \"./timer\";\nimport Canvas from \"./canvas\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConvexHull extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dots: [],\n      lines: [],\n      isALgoLive: false,\n      width: 100,\n      height: 100,\n      isRunning: false,\n      speed: 100,\n      number: 50\n    };\n\n    this.handleValueIncease = value => {\n      this.setState({\n        number: value\n      });\n      this.handleRefreshDots();\n    };\n\n    this.changeSpeed = speed => {\n      //console.log(typeof speed);\n      this.setState({\n        speed: 600 - speed * 10\n      });\n    };\n\n    this.handleAlgoStateChanged = val => {\n      this.setState({\n        isAlgoLive: val\n      });\n    };\n\n    this.handleVisualize = () => {\n      this.setState({\n        isRunning: true\n      });\n    };\n\n    this.handleTurnOff = () => {\n      this.setState({\n        onGoing: false\n      });\n    };\n\n    this.handleRefreshDots = () => {\n      this.setState({\n        isRunning: false\n      });\n      this.setState({\n        dots: getNewDots(this.state.number)\n      });\n    };\n\n    this.handleMoreDot = () => {\n      const row = Math.floor(Math.random() * 400) + 10;\n      const col = Math.floor(Math.random() * 400) + 10;\n      const dot = {\n        row: row,\n        col: col\n      };\n      const dots = this.state.dots;\n      dots.push(dot);\n      this.setState(dots);\n    };\n\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight - 200\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight - 100\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        onRefresh: this.handleRefreshDots,\n        onVisualize: this.handleVisualize,\n        onChangeSpeed: this.changeSpeed,\n        onChangeValues: this.handleValueIncease\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n        width: this.state.width,\n        height: this.state.height,\n        dots: this.state.dots,\n        onTurnOff: this.handleTurnOff,\n        onGoing: this.state.isRunning,\n        speed: this.state.speed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction getNewDots(number) {\n  const dots = [];\n\n  for (let i = 0; i < number; i++) {\n    dots.push(getDot());\n  }\n\n  dots.sort((a, b) => {\n    if (a.xx !== b.xx) {\n      return a.xx - b.xx;\n    } else {\n      return a.yy - b.yy;\n    }\n  });\n  return dots;\n}\n\nfunction getDot() {\n  const width = window.innerWidth - 50;\n  const height = window.innerHeight - 250;\n  const rowpos = Math.floor(Math.random() * height) + 25;\n  const colpos = Math.floor(Math.random() * width) + 25;\n  return {\n    xx: colpos,\n    yy: rowpos\n  };\n}\n\nexport default ConvexHull;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/AlgorithmVisualizer/src/convexHullComponents/convexHull.jsx"],"names":["React","Component","MyTimer","Canvas","Navbar","Menu","ConvexHull","constructor","state","dots","lines","isALgoLive","width","height","isRunning","speed","number","handleValueIncease","value","setState","handleRefreshDots","changeSpeed","handleAlgoStateChanged","val","isAlgoLive","handleVisualize","handleTurnOff","onGoing","getNewDots","handleMoreDot","row","Math","floor","random","col","dot","push","window","innerWidth","innerHeight","componentDidMount","render","i","getDot","sort","a","b","xx","yy","rowpos","colpos"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport MyTimer from \"./timer\";\r\nimport Canvas from \"./canvas\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nclass ConvexHull extends Component {\r\n    state={\r\n        dots:[],\r\n        lines:[],\r\n        isALgoLive:false,\r\n        width:100,\r\n        height:100,\r\n        isRunning:false,\r\n        speed:100,\r\n        number:50\r\n\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.setState({width:window.innerWidth,height:window.innerHeight-200});\r\n    }\r\n    componentDidMount() {\r\n        this.setState({width:window.innerWidth,height:window.innerHeight-100});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    onRefresh={this.handleRefreshDots}\r\n                    onVisualize={this.handleVisualize}\r\n                    onChangeSpeed={this.changeSpeed}\r\n                    onChangeValues={this.handleValueIncease}\r\n                />\r\n                <Canvas\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    dots={this.state.dots}\r\n                    onTurnOff={this.handleTurnOff}\r\n                    onGoing={this.state.isRunning}\r\n                    speed={this.state.speed}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    handleValueIncease = (value) => {\r\n        this.setState({number:value});\r\n        this.handleRefreshDots();\r\n    }\r\n    changeSpeed = (speed) => {\r\n        //console.log(typeof speed);\r\n        this.setState({speed:600-speed*10});\r\n    }\r\n    handleAlgoStateChanged = (val) => {\r\n        this.setState({isAlgoLive:val});\r\n    }\r\n    handleVisualize = () =>{\r\n        this.setState({isRunning:true});\r\n    }\r\n    handleTurnOff = () =>{\r\n        this.setState({onGoing:false});\r\n    }\r\n    handleRefreshDots = () =>{\r\n        this.setState({isRunning:false});\r\n        this.setState({dots:getNewDots(this.state.number)});\r\n    }\r\n\r\n    handleMoreDot = () =>{\r\n        const row = Math.floor(Math.random()*400)+10;\r\n        const col = Math.floor(Math.random()*400)+10;\r\n        const dot = {\r\n            row:row,\r\n            col:col\r\n        }\r\n        const dots = this.state.dots;\r\n        dots.push(dot);\r\n        this.setState(dots);\r\n    }\r\n}\r\nfunction getNewDots(number){\r\n    const dots= [];\r\n    for(let  i = 0; i<number;i++){\r\n        dots.push(getDot());\r\n    }\r\n    dots.sort( (a,b) => {\r\n       if( a.xx!==b.xx ){\r\n           return a.xx-b.xx;\r\n       } else{\r\n           return a.yy - b.yy;\r\n       }\r\n    } );\r\n    return dots;\r\n}\r\nfunction getDot(){\r\n    const width = window.innerWidth-50;\r\n    const height = window.innerHeight-250;\r\n    const rowpos = Math.floor( Math.random()*height )+25;\r\n    const colpos = Math.floor(Math.random()*width)+25;\r\n    return {\r\n        xx:colpos,\r\n        yy:rowpos,\r\n    }\r\n}\r\nexport default ConvexHull;"]},"metadata":{},"sourceType":"module"}