{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\Algorithm-Visualizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _objectSpread from\"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\Algorithm-Visualizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _classCallCheck from\"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\Algorithm-Visualizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";import _createClass from\"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\Algorithm-Visualizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";import _inherits from\"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\Algorithm-Visualizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";import _createSuper from\"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\Algorithm-Visualizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\Algorithm-Visualizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{Component,Fragment}from'react';import Grid from\"./grid\";import Navbar from\"./navbar\";import Menu from\"./menu\";import{dijkstra,getNodesInShortestPathOrder}from\"../algorithms/dijkstra\";import{getMaze}from\"../algorithms/recursiveMaze\";import{bfsdfs}from\"../algorithms/bfs\";import{randomMaze}from\"../algorithms/randomMaze\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Pathfinder=/*#__PURE__*/function(_Component){_inherits(Pathfinder,_Component);var _super=_createSuper(Pathfinder);function Pathfinder(){var _this;_classCallCheck(this,Pathfinder);_this=_super.call(this);_this.handleMouseDown=function(row,col){if((_this.state.startNode.row!==row||_this.state.startNode.col!==col)&&(_this.state.endNode.row!==row||_this.state.endNode.col!==col)){var newGrid=getNewGridWithWallToggled(_this.state.grid,row,col);_this.setState({grid:newGrid});}_this.setState({mouseIsPressed:true});};_this.handleMouseEnter=function(row,col){if(_this.state.mouseIsPressed===false)return;if((_this.state.startNode.row!==row||_this.state.startNode.col!==col)&&(_this.state.endNode.row!==row||_this.state.endNode.col!==col)){var newGrid=getNewGridWithWallToggled(_this.state.grid,row,col);_this.setState({grid:newGrid});}};_this.handleMouseUp=function(row,col){_this.setState({mouseIsPressed:false});};_this.handleAlgoChanged=function(val){_this.setState({algo:val});};_this.handleMazeChanged=function(val){_this.setState({maze:val});};_this.handleCreateMaze=function(){var pairs;switch(_this.state.maze){case 1:pairs=randomMaze(_this.state.grid,_this.state.row,_this.state.col);break;default:pairs=getMaze(_this.state.grid,_this.state.row,_this.state.col);}var _this$state=_this.state,startNode=_this$state.startNode,endNode=_this$state.endNode;var _loop=function _loop(i){setTimeout(function(){if(i===pairs.length-1){// this.setState({grid:this.state.grid});\nvar grid=_this.state.grid;grid[startNode.row][startNode.col]=_objectSpread(_objectSpread({},grid[startNode.row][startNode.col]),{},{isWall:false});grid[endNode.row][endNode.col]=_objectSpread(_objectSpread({},grid[endNode.row][endNode.col]),{},{isWall:false});_this.setState({grid:grid});}if((pairs[i].xx!==startNode.row||pairs[i].yy!==startNode.col)&&(pairs[i].xx!==endNode.row||pairs[i].yy!==endNode.col)){document.getElementById(\"node-\".concat(pairs[i].xx,\"-\").concat(pairs[i].yy)).className=\"node node-wall\";}},i*20);};for(var i=0;i<pairs.length;i++){_loop(i);}};_this.handleClearBoard=function(){var _this$state2=_this.state,grid=_this$state2.grid,row=_this$state2.row,col=_this$state2.col;_this.setState({grid:clearBoard(grid,row,col)});};_this.handleClearPath=function(){var _this$state3=_this.state,grid=_this$state3.grid,row=_this$state3.row,col=_this$state3.col;_this.setState({grid:clearPath(grid,row,col)});};_this.handleClick=function(){/*  for(let i = 0;i<20;i++){\r\n            for(let j = 0; j<50;j++){\r\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\r\n            }\r\n        }*/_this.visualizeDijkstra();/*for(let i = 0;i<this.state.row;i++){\r\n            for(let j = 0; j<this.state.col;j++){\r\n                setTimeout(()=>{\r\n                    const newGrid = toggleVisit(this.state.grid,i,j);\r\n                    this.setState({grid:newGrid});\r\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\r\n                },100*(i+j)+j);\r\n            }\r\n        }*/};_this.state={grid:[],mouseIsPressed:false,algorithms:[\"Dijsktra\",\"BFS\",\"DFS\"],algo:0,mazes:[\"Recursive division\",\"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"],maze:0};return _this;}_createClass(Pathfinder,[{key:\"componentDidMount\",value:function componentDidMount(){var width=window.innerWidth;var height=window.innerHeight;var row=Math.max(Math.floor(height/25)-7,10);var col=Math.floor(width/25);var startNode={row:4,col:4};var endNode={row:row-5,col:col-5};console.log(endNode.row);var grid=getInitialGrid(row,col);grid[startNode.row][startNode.col].isStartNode=true;grid[row-5][col-5].isEndNode=true;this.setState({grid:grid,row:row,col:col,startNode:startNode,endNode:endNode});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Menu,{onAlgoChanged:this.handleAlgoChanged,onVisualize:this.handleClick,algorithms:this.state.algorithms,mazes:this.state.mazes,onMazeChanged:this.handleMazeChanged,onCreateMaze:this.handleCreateMaze,onClearBoard:this.handleClearBoard,onClearPath:this.handleClearPath}),/*#__PURE__*/_jsx(\"span\",{style:{margin:2}}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:\"center\"},children:/*#__PURE__*/_jsx(Grid,{grid:this.state.grid,onMouseDown:this.handleMouseDown,onMouseEnter:this.handleMouseEnter,onMouseUp:this.handleMouseUp})})]});}},{key:\"visualizeDijkstra\",value:function visualizeDijkstra(){var grid=this.state.grid;var startNode=grid[this.state.startNode.row][this.state.startNode.col];var finishNode=grid[this.state.endNode.row][this.state.endNode.col];var visitedNodesInOrder;switch(this.state.algo){case 0:visitedNodesInOrder=dijkstra(grid,startNode,finishNode);break;case 1:visitedNodesInOrder=bfsdfs(grid,startNode,finishNode,\"bfs\");break;default:visitedNodesInOrder=bfsdfs(grid,startNode,finishNode,\"dfs\");}var nodesInShortestPathOrder=getNodesInShortestPathOrder(finishNode);this.animateDijkstra(visitedNodesInOrder,nodesInShortestPathOrder);}},{key:\"animateDijkstra\",value:function(){var _animateDijkstra=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(visitedNodesInOrder,nodesInShortestPathOrder){var i,node,newGrid;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:i=0;case 1:if(!(i<=visitedNodesInOrder.length)){_context.next=16;break;}if(!(i===visitedNodesInOrder.length)){_context.next=8;break;}_context.next=5;return sleep(100);case 5:_context.next=7;return this.animateShortestPath(nodesInShortestPathOrder);case 7:return _context.abrupt(\"return\");case 8:// setTimeout(() => {\nnode=visitedNodesInOrder[i];newGrid=toggleVisit(this.state.grid,node.row,node.col);//this.setState({grid:newGrid});\ndocument.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';_context.next=13;return sleep(10);case 13:i++;_context.next=1;break;case 16:case\"end\":return _context.stop();}}},_callee,this);}));function animateDijkstra(_x,_x2){return _animateDijkstra.apply(this,arguments);}return animateDijkstra;}()},{key:\"animateShortestPath\",value:function(){var _animateShortestPath=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(nodesInShortestPathOrder){var grid,newGrid,i,node,newNode;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:grid=this.state.grid;newGrid=grid.slice();i=0;case 3:if(!(i<nodesInShortestPathOrder.length)){_context2.next=14;break;}//   setTimeout(() => {\nnode=nodesInShortestPathOrder[i];newNode=_objectSpread(_objectSpread({},newGrid[node.row][node.col]),{},{ispathNode:true});newGrid[node.row][node.col]=newNode;if(i===nodesInShortestPathOrder.length-1){this.setState({grid:newGrid});}document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-shortest-path';_context2.next=11;return sleep(50);case 11:i++;_context2.next=3;break;case 14:case\"end\":return _context2.stop();}}},_callee2,this);}));function animateShortestPath(_x3){return _animateShortestPath.apply(this,arguments);}return animateShortestPath;}()}]);return Pathfinder;}(Component);var clearPath=function clearPath(grid,row,col){var newGrid=grid.slice();for(var i=0;i<row;i++){for(var j=0;j<col;j++){var node=newGrid[i][j];var newNode=_objectSpread(_objectSpread({},node),{},{distance:Infinity,visitedNode:false,isVisited:false,ispathNode:false,previousNode:null});newGrid[i][j]=newNode;}}return newGrid;};var clearBoard=function clearBoard(grid,row,col){var newGrid=grid.slice();for(var i=0;i<row;i++){for(var j=0;j<col;j++){var node=newGrid[i][j];var newNode=_objectSpread(_objectSpread({},node),{},{isWall:false,distance:Infinity,visitedNode:false,isVisited:false,ispathNode:false,previousNode:null});newGrid[i][j]=newNode;}}return newGrid;};var toggleVisit=function toggleVisit(grid,row,col){var newGrid=grid.slice();var node=newGrid[row][col];var newNode=_objectSpread(_objectSpread({},node),{},{visitedNode:!node.visitedNode});newGrid[row][col]=newNode;return newGrid;};var getNewGridWithWallToggled=function getNewGridWithWallToggled(grid,row,col){var newGrid=grid.slice();var node=newGrid[row][col];var newNode=_objectSpread(_objectSpread({},node),{},{isWall:true//!node.isWall,\n});newGrid[row][col]=newNode;return newGrid;};var getInitialGrid=function getInitialGrid(totRow,totCol){var grid=[];for(var row=0;row<totRow;row++){var currentRow=[];for(var col=0;col<totCol;col++){currentRow.push(createNode(row,col));}grid.push(currentRow);}return grid;};var createNode=function createNode(row,col){return{row:row,col:col,isWall:false,isStartNode:false,isEndNode:false,distance:Infinity,visitedNode:false,isVisited:false,ispathNode:false,previousNode:null};};function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});}export default Pathfinder;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/Algorithm-Visualizer/src/pathfinderComponents/pathfinder.jsx"],"names":["React","Component","Fragment","Grid","Navbar","Menu","dijkstra","getNodesInShortestPathOrder","getMaze","bfsdfs","randomMaze","Pathfinder","handleMouseDown","row","col","state","startNode","endNode","newGrid","getNewGridWithWallToggled","grid","setState","mouseIsPressed","handleMouseEnter","handleMouseUp","handleAlgoChanged","val","algo","handleMazeChanged","maze","handleCreateMaze","pairs","i","setTimeout","length","isWall","xx","yy","document","getElementById","className","handleClearBoard","clearBoard","handleClearPath","clearPath","handleClick","visualizeDijkstra","algorithms","mazes","width","window","innerWidth","height","innerHeight","Math","max","floor","console","log","getInitialGrid","isStartNode","isEndNode","margin","textAlign","finishNode","visitedNodesInOrder","nodesInShortestPathOrder","animateDijkstra","sleep","animateShortestPath","node","toggleVisit","slice","newNode","ispathNode","j","distance","Infinity","visitedNode","isVisited","previousNode","totRow","totCol","currentRow","push","createNode","ms","Promise","resolve"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport Grid from \"./grid\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\r\nimport {getMaze} from \"../algorithms/recursiveMaze\";\r\nimport {bfsdfs} from \"../algorithms/bfs\";\r\nimport {randomMaze} from \"../algorithms/randomMaze\";\r\n\r\nclass Pathfinder extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            grid:[],\r\n            mouseIsPressed:false,\r\n            algorithms:[\r\n                \"Dijsktra\",\"BFS\",\"DFS\"\r\n            ],\r\n            algo:0,\r\n            mazes:[\r\n                \"Recursive division\",\"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"\r\n            ],\r\n            maze:0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const row = Math.max(Math.floor(height/25)-7,10);\r\n        const col = Math.floor(width/25);\r\n        const startNode = {\r\n            row:4,\r\n            col:4\r\n        };\r\n        const endNode = {\r\n            row: row-5,\r\n            col: col-5\r\n        }\r\n        console.log( endNode.row );\r\n        const grid = getInitialGrid(row,col);\r\n        grid[startNode.row][startNode.col].isStartNode = true;\r\n        grid[row-5][col-5].isEndNode = true;\r\n        this.setState({grid,row,col,startNode,endNode});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Navbar/>\r\n\r\n                <Menu\r\n                    onAlgoChanged = {this.handleAlgoChanged}\r\n                    onVisualize = {this.handleClick}\r\n                    algorithms={this.state.algorithms}\r\n                    mazes={this.state.mazes}\r\n                    onMazeChanged={this.handleMazeChanged}\r\n                    onCreateMaze={this.handleCreateMaze}\r\n                    onClearBoard={this.handleClearBoard}\r\n                    onClearPath={this.handleClearPath}\r\n                />\r\n                <span style={{margin: 2}}/>\r\n                <div style={{textAlign:\"center\"}} >\r\n                    <Grid\r\n                        grid={this.state.grid}\r\n                        onMouseDown={this.handleMouseDown}\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    handleMouseDown = (row, col) => {\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n        this.setState({mouseIsPressed: true});\r\n    }\r\n\r\n    handleMouseEnter = (row, col) => {\r\n        if (this.state.mouseIsPressed === false) return;\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n    }\r\n\r\n    handleMouseUp = (row,col) => {\r\n        this.setState({mouseIsPressed: false});\r\n    }\r\n\r\n    handleAlgoChanged = (val) =>{\r\n        this.setState({algo:val});\r\n    }\r\n\r\n    handleMazeChanged = (val)=>{\r\n        this.setState({maze:val});\r\n    }\r\n\r\n    handleCreateMaze = () =>{\r\n        let pairs;\r\n        switch (this.state.maze){\r\n            case 1:\r\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\r\n                break;\r\n            default:\r\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\r\n        }\r\n        const {startNode,endNode} = this.state;\r\n        for( let i = 0;i<pairs.length;i++ ){\r\n            setTimeout(()=>{\r\n                if( i === pairs.length-1 ){\r\n                   // this.setState({grid:this.state.grid});\r\n                    const grid = this.state.grid;\r\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\r\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\r\n                    this.setState({grid});\r\n                }\r\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\r\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\r\n                }\r\n            },i*20);\r\n        }\r\n    }\r\n    handleClearBoard = ()=>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearBoard(grid,row,col)});\r\n    }\r\n    handleClearPath = () =>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearPath(grid,row,col)});\r\n    }\r\n    handleClick = () =>{\r\n      /*  for(let i = 0;i<20;i++){\r\n            for(let j = 0; j<50;j++){\r\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\r\n            }\r\n        }*/\r\n        this.visualizeDijkstra();\r\n        /*for(let i = 0;i<this.state.row;i++){\r\n            for(let j = 0; j<this.state.col;j++){\r\n                setTimeout(()=>{\r\n                    const newGrid = toggleVisit(this.state.grid,i,j);\r\n                    this.setState({grid:newGrid});\r\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\r\n                },100*(i+j)+j);\r\n            }\r\n        }*/\r\n    }\r\n\r\n    visualizeDijkstra() {\r\n        const {grid} = this.state;\r\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\r\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\r\n        let visitedNodesInOrder;\r\n        switch (this.state.algo){\r\n            case 0:\r\n                visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n                break;\r\n            case 1:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\r\n                break;\r\n            default:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\r\n        }\r\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    }\r\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n\r\n            if (i === visitedNodesInOrder.length) {\r\n              //  setTimeout(() => {\r\n                    await sleep(100);\r\n                    await this.animateShortestPath(nodesInShortestPathOrder);\r\n\r\n              //  }, 10 * (i+10));\r\n                return;\r\n            }\r\n           // setTimeout(() => {\r\n                const node = visitedNodesInOrder[i];\r\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\r\n                //this.setState({grid:newGrid});\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-visited';\r\n                await sleep(10);\r\n           // }, 10 * i);\r\n        }\r\n    }\r\n\r\n    async animateShortestPath(nodesInShortestPathOrder) {\r\n        const grid = this.state.grid;\r\n        const newGrid = grid.slice();\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n         //   setTimeout(() => {\r\n\r\n                const node = nodesInShortestPathOrder[i];\r\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\r\n                newGrid[node.row][node.col] = newNode;\r\n                if( i === nodesInShortestPathOrder.length-1 ){\r\n                    this.setState({grid:newGrid});\r\n                }\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-shortest-path';\r\n                await sleep(50);\r\n            //}, 50 * i);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst clearPath = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\nconst clearBoard = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                isWall: false,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\n\r\nconst toggleVisit = (grid,row,col) =>{\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        visitedNode: !node.visitedNode\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n}\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        isWall: true//!node.isWall,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n};\r\nconst getInitialGrid = (totRow,totCol) => {\r\n    const grid = [];\r\n    for (let row = 0; row < totRow; row++) {\r\n        const currentRow = [];\r\n        for (let col = 0; col < totCol; col++) {\r\n            currentRow.push(createNode(row,col));\r\n        }\r\n        grid.push(currentRow);\r\n    }\r\n    return grid;\r\n}\r\n\r\nconst createNode = (row,col)=>{\r\n    return {\r\n        row,\r\n        col,\r\n        isWall: false,\r\n        isStartNode:false,\r\n        isEndNode:false,\r\n        distance:Infinity,\r\n        visitedNode: false,\r\n        isVisited:false,\r\n        ispathNode:false,\r\n        previousNode:null\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default Pathfinder;"]},"metadata":{},"sourceType":"module"}