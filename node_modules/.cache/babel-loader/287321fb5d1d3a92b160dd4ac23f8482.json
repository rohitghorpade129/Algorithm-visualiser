{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\Algorithm-Visualizer\\\\src\\\\binarySearchComponent\\\\doubleSlider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: 400\n  }\n});\nconst CSlider = withStyles({\n  root: {\n    // color: \"#ffffff\",\n    height: 3,\n    width: 400,\n    padding: \"13px 0\"\n  },\n  track: {\n    height: 4,\n    borderRadius: 2\n  },\n  thumb: {\n    backgroundColor: \"#fff\" //color: \"#fff\",\n\n  }\n})(Slider);\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function RangeSlider(props) {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState([props.lower, props.upper]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleCommit = (event, newValue) => {\n    console.log(newValue);\n  };\n\n  useEffect(() => {\n    setValue([props.lower, props.upper]);\n  }, [props.lower, props.upper]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CSlider, {\n      disabled: true,\n      value: value,\n      onChange: handleChange,\n      onChangeCommitted: handleCommit,\n      valueLabelDisplay: \"auto\",\n      \"aria-labelledby\": \"range-slider\",\n      getAriaValueText: valuetext,\n      valueLabelDisplay: \"on\",\n      max: props.max\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      id: \"range-slider\",\n      gutterBottom: true,\n      children: \"Binary Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RangeSlider, \"G22J3/BwTQENSlqPXPnJW3mY1hE=\", false, function () {\n  return [useStyles];\n});\n\n_c = RangeSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RangeSlider\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/Algorithm-Visualizer/src/binarySearchComponent/doubleSlider.jsx"],"names":["React","useEffect","makeStyles","withStyles","Typography","Slider","useStyles","root","width","CSlider","height","padding","track","borderRadius","thumb","backgroundColor","valuetext","value","RangeSlider","props","classes","setValue","useState","lower","upper","handleChange","event","newValue","handleCommit","console","log","max"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,0BAArC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AACzBK,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL;AADmB,CAAD,CAA5B;AAOA,MAAMC,OAAO,GAAGN,UAAU,CAAC;AACvBI,EAAAA,IAAI,EAAE;AACH;AACCG,IAAAA,MAAM,EAAE,CAFN;AAGFF,IAAAA,KAAK,EAAE,GAHL;AAIFG,IAAAA,OAAO,EAAE;AAJP,GADiB;AAOvBC,EAAAA,KAAK,EAAE;AACHF,IAAAA,MAAM,EAAE,CADL;AAEHG,IAAAA,YAAY,EAAE;AAFX,GAPgB;AAWvBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,eAAe,EAAE,MADd,CAEH;;AAFG;AAXgB,CAAD,CAAV,CAebV,MAfa,CAAhB;;AAiBA,SAASW,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,SAAQ,GAAEA,KAAM,EAAhB;AACH;;AAID,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AACA,QAAM,CAACW,KAAD,EAAQI,QAAR,IAAoBrB,KAAK,CAACsB,QAAN,CAAe,CAACH,KAAK,CAACI,KAAP,EAAcJ,KAAK,CAACK,KAApB,CAAf,CAA1B;;AAEA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCN,IAAAA,QAAQ,CAACM,QAAD,CAAR;AAEH,GAHD;;AAIA,QAAMC,YAAY,GAAG,CAACF,KAAD,EAAQC,QAAR,KAAqB;AACtCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,GAFD;;AAGA1B,EAAAA,SAAS,CAAC,MAAI;AACVoB,IAAAA,QAAQ,CAAC,CAACF,KAAK,CAACI,KAAP,EAAaJ,KAAK,CAACK,KAAnB,CAAD,CAAR;AACH,GAFQ,EAEP,CAACL,KAAK,CAACI,KAAP,EAAaJ,KAAK,CAACK,KAAnB,CAFO,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACb,IAAxB;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,KAAK,EAAEU,KAFX;AAGI,MAAA,QAAQ,EAAEQ,YAHd;AAII,MAAA,iBAAiB,EAAEG,YAJvB;AAKI,MAAA,iBAAiB,EAAC,MALtB;AAMI,yBAAgB,cANpB;AAOI,MAAA,gBAAgB,EAAEZ,SAPtB;AAQI,MAAA,iBAAiB,EAAC,IARtB;AASI,MAAA,GAAG,EAAEG,KAAK,CAACY;AATf;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,cAAf;AAA8B,MAAA,YAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAhCuBb,W;UACJZ,S;;;KADIY,W","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 400,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        width: 400,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([props.lower, props.upper]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n    useEffect(()=>{\r\n        setValue([props.lower,props.upper]);\r\n    },[props.lower,props.upper])\r\n    return (\r\n        <div className={classes.root}>\r\n            <CSlider\r\n                disabled\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"on\"\r\n                max={props.max}\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Binary Search\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}