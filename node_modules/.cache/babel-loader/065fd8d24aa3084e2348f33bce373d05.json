{"ast":null,"code":"import graph from \"./images/graph.png\";\nimport primes from \"./images/primes.jpg\";\nimport sort from \"./sort.png\";\nimport queen from \"./images/queen.PNG\";\nimport binSearch from \"./images/binaryTree.png\";\nimport convex from './images/convexHull.png';\nimport puzzle from './images/15puzzle.PNG';\nimport sudoku from './images/sudoku.png';\nexport function getDetails() {\n  return [{\n    id: 1,\n    title: \"Pathfinder\",\n    description: \"Visualize graph algorithms like dijkstra, BFS, DFS\",\n    route: \"/pathfinder\",\n    img: graph\n  }, //    {\n  //        id:2,\n  //        title:\"Prime Numbers\",\n  //        description:\"Visualize how Seive is better than brute force\",\n  //        route:\"/prime\",\n  //        img:primes\n  //    },\n  {\n    id: 3,\n    title: \"Sorting Algorithm\",\n    description: \"Compare different sorting algorithms\",\n    route: \"/sort\",\n    img: sort\n  }, //    {\n  //        id:9,\n  //        title:\"Recursive Sorting\",\n  //        description:\"Compare different recursive sorting algorithms\",\n  //        route:\"/recursivesort\",\n  //        img:sort\n  //    },\n  //    {\n  //        id:4,\n  //        title:\"N Queen\",\n  //        description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\n  //        route:\"/nqueen\",\n  //        img:queen\n  //    },\n  //    {\n  //        id:5,\n  //        title:\"Convex Hull\",\n  //        description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\n  //        route:\"/convexhull\",\n  //        img:convex\n  //    },\n  {\n    id: 7,\n    title: \"Binary Search\",\n    description: \"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\n    route: \"/binarysearch\",\n    img: binSearch\n  } //    {\n  //        id:6,\n  //        title:\"Sudoku\",\n  //        description:\"Coming soon...\",\n  //        route:\"/\",\n  //        img:sudoku\n  //    },\n  //    {\n  //        id:8,\n  //        title:\"15 Puzzle\",\n  //        description:\"Coming soon...\",\n  //        route:\"/\",\n  //        img:puzzle\n  //    }\n  ];\n}","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/AlgorithmVisualizer/src/homeComponents/cardDetails.js"],"names":["graph","primes","sort","queen","binSearch","convex","puzzle","sudoku","getDetails","id","title","description","route","img"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,SAASC,UAAT,GAAqB;AACzB,SAAO,CACH;AACIC,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,KAAK,EAAC,YAFV;AAGIC,IAAAA,WAAW,EAAC,oDAHhB;AAIIC,IAAAA,KAAK,EAAC,aAJV;AAKIC,IAAAA,GAAG,EAACb;AALR,GADG,EAQN;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACIS,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,KAAK,EAAC,mBAFV;AAGIC,IAAAA,WAAW,EAAC,sCAHhB;AAIIC,IAAAA,KAAK,EAAC,OAJV;AAKIC,IAAAA,GAAG,EAACX;AALR,GAfG,EAsBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACIO,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,KAAK,EAAC,eAFV;AAGIC,IAAAA,WAAW,EAAC,wFAHhB;AAIIC,IAAAA,KAAK,EAAC,eAJV;AAKIC,IAAAA,GAAG,EAACT;AALR,GA3CG,CAkDN;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAhEM,GAAP;AAmEF","sourcesContent":["import graph from \"./images/graph.png\";\r\nimport primes from \"./images/primes.jpg\";\r\nimport sort from \"./sort.png\";\r\nimport queen from \"./images/queen.PNG\";\r\nimport binSearch from \"./images/binaryTree.png\";\r\nimport convex from './images/convexHull.png';\r\nimport puzzle from './images/15puzzle.PNG';\r\nimport sudoku from './images/sudoku.png';\r\nexport function getDetails(){\r\n   return [\r\n       {\r\n           id:1,\r\n           title:\"Pathfinder\",\r\n           description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",\r\n           route:\"/pathfinder\",\r\n           img:graph\r\n       },\r\n    //    {\r\n    //        id:2,\r\n    //        title:\"Prime Numbers\",\r\n    //        description:\"Visualize how Seive is better than brute force\",\r\n    //        route:\"/prime\",\r\n    //        img:primes\r\n    //    },\r\n       {\r\n           id:3,\r\n           title:\"Sorting Algorithm\",\r\n           description:\"Compare different sorting algorithms\",\r\n           route:\"/sort\",\r\n           img:sort\r\n       },\r\n    //    {\r\n    //        id:9,\r\n    //        title:\"Recursive Sorting\",\r\n    //        description:\"Compare different recursive sorting algorithms\",\r\n    //        route:\"/recursivesort\",\r\n    //        img:sort\r\n    //    },\r\n    //    {\r\n    //        id:4,\r\n    //        title:\"N Queen\",\r\n    //        description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\r\n    //        route:\"/nqueen\",\r\n    //        img:queen\r\n    //    },\r\n    //    {\r\n    //        id:5,\r\n    //        title:\"Convex Hull\",\r\n    //        description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\r\n    //        route:\"/convexhull\",\r\n    //        img:convex\r\n    //    },\r\n       {\r\n           id:7,\r\n           title:\"Binary Search\",\r\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\r\n           route:\"/binarysearch\",\r\n           img:binSearch\r\n       },\r\n    //    {\r\n    //        id:6,\r\n    //        title:\"Sudoku\",\r\n    //        description:\"Coming soon...\",\r\n    //        route:\"/\",\r\n    //        img:sudoku\r\n    //    },\r\n\r\n    //    {\r\n    //        id:8,\r\n    //        title:\"15 Puzzle\",\r\n    //        description:\"Coming soon...\",\r\n    //        route:\"/\",\r\n    //        img:puzzle\r\n    //    }\r\n\r\n   ]\r\n}"]},"metadata":{},"sourceType":"module"}