{"ast":null,"code":"export function convex_hull(points) {\n  if (points.size === 1) {\n    return;\n  }\n\n  const pointStart = points[0];\n  const pointEnd = points[points.length - 1];\n  const up = [],\n        down = [];\n  const pairs = [];\n  const lines = [];\n  up.push(pointStart);\n  down.push(pointStart);\n\n  for (let i = 1; i < points.length; i++) {\n    if (i === points.length - 1 || cw(pointStart, points[i], pointEnd)) {\n      while (up.length >= 2 && !cw(up[up.length - 2], up[up.length - 1], points[i])) {\n        lines.push({\n          from: up[up.length - 2],\n          to: up[up.length - 1],\n          add: false\n        });\n        up.pop();\n      }\n\n      up.push(points[i]);\n      lines.push({\n        from: up[up.length - 2],\n        to: up[up.length - 1],\n        add: true\n      });\n    }\n  }\n\n  for (let i = 0; i < points.length; i++) {\n    if (i === points.length - 1 || ccw(pointStart, points[i], pointEnd)) {\n      while (down.length >= 2 && !ccw(down[down.length - 2], down[down.length - 1], points[i])) {\n        lines.push({\n          from: down[down.length - 2],\n          to: down[down.length - 1],\n          add: false\n        });\n        down.pop();\n      }\n\n      down.push(points[i]);\n      lines.push({\n        from: down[down.length - 2],\n        to: down[down.length - 1],\n        add: true\n      });\n    }\n  }\n\n  for (let i = 0; i < up.length; i++) {\n    pairs.push(up[i]);\n  }\n\n  for (let i = down.length - 2; i > 0; i--) {\n    pairs.push(down[i]);\n  }\n\n  return [pairs, lines];\n}\n\nfunction cw(a, b, c) {\n  const f = a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy);\n\n  if (a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) < 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction ccw(a, b, c) {\n  if (a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0) {\n    return true;\n  } else {\n    return false;\n  }\n}","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/AlgorithmVisualizer/src/algorithms/grahamScan.js"],"names":["convex_hull","points","size","pointStart","pointEnd","length","up","down","pairs","lines","push","i","cw","from","to","add","pop","ccw","a","b","c","f","xx","yy"],"mappings":"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","sourcesContent":["export function convex_hull(points){\r\n    if( points.size === 1 ){\r\n        return;\r\n    }\r\n    const pointStart = points[0];\r\n    const pointEnd = points[ points.length-1 ];\r\n    const up = [], down = [];\r\n    const pairs = [];\r\n    const lines=[];\r\n    up.push( pointStart);\r\n    down.push(pointStart);\r\n    for( let i = 1; i< points.length ;i++ ){\r\n        if( (i === (points.length - 1)) || cw( pointStart,points[i],pointEnd ) ){\r\n            while( up.length >=2 && !cw(up[up.length-2],up[up.length-1],points[i] ) ){\r\n                lines.push({\r\n                    from:up[up.length-2],\r\n                    to:up[up.length-1],\r\n                    add:false\r\n                });\r\n                up.pop();\r\n            }\r\n            up.push( points[i] );\r\n            lines.push({\r\n                from:up[up.length-2],\r\n                to:up[up.length-1],\r\n                add:true\r\n            })\r\n        }\r\n\r\n    }\r\n    for(let i = 0; i< points.length;i++){\r\n        if( (i === (points.length - 1)) || ccw( pointStart,points[i],pointEnd ) ){\r\n            while( down.length >=2 && !ccw(down[down.length-2],down[down.length-1],points[i] ) ){\r\n                lines.push({\r\n                    from:down[down.length-2],\r\n                    to:down[down.length-1],\r\n                    add:false\r\n                });\r\n                down.pop();\r\n            }\r\n            down.push( points[i] );\r\n            lines.push({\r\n                from:down[down.length-2],\r\n                to:down[down.length-1],\r\n                add:true\r\n            })\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < up.length; i++){\r\n        pairs.push(up[i]);\r\n    }\r\n    for (let i = down.length - 2; i > 0; i--) {\r\n        pairs.push(down[i]);\r\n    }\r\n    return [pairs,lines];\r\n}\r\n\r\nfunction cw(a, b, c) {\r\n    const f = a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy);\r\n    if( a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy) < 0 ){\r\n        return true;\r\n    } else{\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nfunction ccw(a, b, c){\r\n    if( a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0 ){\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}