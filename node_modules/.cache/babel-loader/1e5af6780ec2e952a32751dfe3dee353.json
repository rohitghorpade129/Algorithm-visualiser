{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\AlgorithmVisualizer\\\\src\\\\convexHullComponents\\\\timer.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyTimer extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      time: 0,\n      going: false\n    };\n\n    this.startCount = async () => {\n      while (this.props.onGoing) {\n        this.setState({\n          time: this.state.time + 1\n        });\n\n        if (this.state.time > 10) {\n          this.setState({\n            time: 0\n          });\n          this.props.onStop();\n        }\n\n        await sleep(100);\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.onGoing !== this.props.onGoing) {\n      this.setState({\n        going: this.props.onGoing\n      });\n\n      if (this.props.onGoing) {\n        this.startCount();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge badge-danger\",\n          children: this.state.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default MyTimer;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/AlgorithmVisualizer/src/convexHullComponents/timer.jsx"],"names":["React","Component","MyTimer","state","time","going","startCount","props","onGoing","setState","onStop","sleep","componentDidUpdate","prevProps","prevState","snapshot","render","ms","Promise","resolve","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACtB;AACFC,MAAAA,IAAI,EAAC,CADH;AAEFC,MAAAA,KAAK,EAAC;AAFJ,KADsB;;AAAA,SAa5BC,UAb4B,GAaf,YAAY;AACrB,aAAO,KAAKC,KAAL,CAAWC,OAAlB,EAA0B;AACtB,aAAKC,QAAL,CAAc;AAACL,UAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC,IAAX,GAAgB;AAAtB,SAAd;;AACA,YAAI,KAAKD,KAAL,CAAWC,IAAX,GAAgB,EAApB,EAAuB;AACnB,eAAKK,QAAL,CAAc;AAACL,YAAAA,IAAI,EAAC;AAAN,WAAd;AACA,eAAKG,KAAL,CAAWG,MAAX;AACH;;AACD,cAAMC,KAAK,CAAC,GAAD,CAAX;AACH;AACJ,KAtB2B;AAAA;;AAK5BC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAIF,SAAS,CAACL,OAAV,KAAoB,KAAKD,KAAL,CAAWC,OAAnC,EAA4C;AACxC,WAAKC,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAC,KAAKE,KAAL,CAAWC;AAAlB,OAAd;;AACA,UAAI,KAAKD,KAAL,CAAWC,OAAf,EAAwB;AACpB,aAAKF,UAAL;AACH;AACJ;AACJ;;AAYDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA,oBACC,KAAKb,KAAL,CAAWC;AADZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAlC2B;;AAoChC,SAASO,KAAT,CAAeM,EAAf,EAAmB;AACf,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACH;;AAED,eAAef,OAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass MyTimer extends Component {\r\n    state={\r\n        time:0,\r\n        going:false,\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if( prevProps.onGoing!==this.props.onGoing ){\r\n            this.setState({going:this.props.onGoing});\r\n            if( this.props.onGoing ){\r\n                this.startCount();\r\n            }\r\n        }\r\n    }\r\n    startCount = async () => {\r\n        while (this.props.onGoing){\r\n            this.setState({time:this.state.time+1});\r\n            if( this.state.time>10){\r\n                this.setState({time:0});\r\n                this.props.onStop();\r\n            }\r\n            await sleep(100);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>\r\n                    <span className='badge badge-danger'>\r\n                    {this.state.time}\r\n                </span>\r\n                </h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default MyTimer;"]},"metadata":{},"sourceType":"module"}