{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\AlgorithmVisualizer\\\\src\\\\queenComponents\\\\cell.jsx\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport queen from './queen.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cell extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.getClassName = () => {\n      if (this.props.cell.isAttacked) {\n        return \"boardCell attacked\";\n      } else if (this.props.cell.isCurrent) {\n        return \"boardCell current\";\n      } else if (this.props.cell.isPresent) {\n        return \"boardCell present\";\n      } else if (this.props.cell.isChecked) {\n        return \"boardCell checked\";\n      } else {\n        return \"boardCell\";\n      }\n    };\n\n    this.getStyled = () => {\n      if ((this.props.cell.row + this.props.cell.col) % 2 === 0) {\n        return {\n          backgroundColor: \"white\"\n        };\n      } else {\n        return {\n          backgroundColor: \"grey\"\n        };\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.getClassName(),\n      style: this.getStyled(),\n      children: this.props.cell.isPresent && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: queen,\n        height: \"100px\",\n        style: {\n          padding: \"25px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/AlgorithmVisualizer/src/queenComponents/cell.jsx"],"names":["React","Component","queen","Cell","getClassName","props","cell","isAttacked","isCurrent","isPresent","isChecked","getStyled","row","col","backgroundColor","render","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AACA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAQzBG,YARyB,GAQV,MAAI;AACf,UAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,UAAnB,EAA8B;AAC1B,eAAO,oBAAP;AACH,OAFD,MAEO,IAAG,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,SAAnB,EAA6B;AAChC,eAAO,mBAAP;AACH,OAFM,MAED,IAAG,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,SAAnB,EAA6B;AAC/B,eAAO,mBAAP;AACH,OAFK,MAEA,IAAG,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,SAAnB,EAA6B;AAC/B,eAAO,mBAAP;AACH,OAFK,MAEA;AACF,eAAO,WAAP;AACH;AACJ,KApBwB;;AAAA,SAqBzBC,SArByB,GAqBb,MAAK;AACb,UAAI,CAAC,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,GAAhB,GAAoB,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,GAArC,IAA0C,CAA1C,KAAgD,CAApD,EAAuD;AACnD,eAAO;AACHC,UAAAA,eAAe,EAAC;AADb,SAAP;AAGH,OAJD,MAIK;AACD,eAAO;AACHA,UAAAA,eAAe,EAAC;AADb,SAAP;AAGH;AACJ,KA/BwB;AAAA;;AACzBC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAE,KAAKX,YAAL,EAAhB;AAAqC,MAAA,KAAK,EAAE,KAAKO,SAAL,EAA5C;AAAA,gBACM,KAAKN,KAAL,CAAWC,IAAX,CAAgBG,SAAhB,iBAA6B;AAAK,QAAA,GAAG,EAAEP,KAAV;AAAiB,QAAA,MAAM,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAE;AAACc,UAAAA,OAAO,EAAC;AAAT;AAAvC;AAAA;AAAA;AAAA;AAAA;AADnC;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAPwB;;AAkC7B,eAAeb,IAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport './style.css'\r\nimport queen from './queen.png';\r\nclass Cell extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.getClassName()} style={this.getStyled()}>\r\n                { this.props.cell.isPresent && <img src={queen} height='100px' style={{padding:\"25px\"}}/> }\r\n            </div>\r\n        );\r\n    }\r\n    getClassName = ()=>{\r\n        if(this.props.cell.isAttacked){\r\n            return \"boardCell attacked\";\r\n        } else if(this.props.cell.isCurrent){\r\n            return \"boardCell current\";\r\n        }else if(this.props.cell.isPresent){\r\n            return \"boardCell present\";\r\n        }else if(this.props.cell.isChecked){\r\n            return \"boardCell checked\";\r\n        } else{\r\n            return \"boardCell\";\r\n        }\r\n    }\r\n    getStyled = () =>{\r\n        if( (this.props.cell.row+this.props.cell.col)%2 === 0 ){\r\n            return {\r\n                backgroundColor:\"white\"\r\n            }\r\n        }else{\r\n            return {\r\n                backgroundColor:\"grey\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cell;"]},"metadata":{},"sourceType":"module"}