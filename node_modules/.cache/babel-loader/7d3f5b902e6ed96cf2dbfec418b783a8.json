{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\New folder\\\\AlgorithmVisualizer\\\\src\\\\sortComponents\\\\slider.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: 200\n  }\n});\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function DiscreteSlider(props) {\n  _s();\n\n  const classes = useStyles();\n\n  const handleChange = event => {\n    if (event.target.innerText === \"\") {\n      return;\n    }\n\n    const num = parseInt(event.target.innerText, 10);\n    props.onCountChange(num);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root + \" ml-2 mr-2\",\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      defaultValue: props.default,\n      getAriaValueText: valuetext,\n      \"aria-labelledby\": \"discrete-slider\",\n      valueLabelDisplay: \"auto\",\n      onChangeCommitted: handleChange,\n      step: props.step // marks={props.marks}\n      ,\n      min: props.min,\n      max: props.max,\n      valueLabelDisplay: \"on\",\n      disabled: props.disable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      id: \"discrete-slider\",\n      gutterBottom: true,\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DiscreteSlider, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DiscreteSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiscreteSlider\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/AlgorithmVisualizer/src/sortComponents/slider.jsx"],"names":["React","makeStyles","Typography","Slider","useStyles","root","width","valuetext","value","DiscreteSlider","props","classes","handleChange","event","target","innerText","num","parseInt","onCountChange","default","step","min","max","disable","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AACzBI,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL;AADmB,CAAD,CAA5B;;AAMA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,SAAQ,GAAEA,KAAM,EAAhB;AACH;;AAGD,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC1C,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AACA,QAAMQ,YAAY,GAAIC,KAAD,IAAU;AAC3B,QAAIA,KAAK,CAACC,MAAN,CAAaC,SAAb,KAA2B,EAA/B,EAAmC;AAC/B;AACH;;AACD,UAAMC,GAAG,GAAGC,QAAQ,CAACJ,KAAK,CAACC,MAAN,CAAaC,SAAd,EAAwB,EAAxB,CAApB;AACAL,IAAAA,KAAK,CAACQ,aAAN,CAAoBF,GAApB;AACH,GAND;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACN,IAAR,GAAa,YAA7B;AAAA,4BAEI,QAAC,MAAD;AACI,MAAA,YAAY,EAAEK,KAAK,CAACS,OADxB;AAEI,MAAA,gBAAgB,EAAEZ,SAFtB;AAGI,yBAAgB,iBAHpB;AAII,MAAA,iBAAiB,EAAC,MAJtB;AAKI,MAAA,iBAAiB,EAAEK,YALvB;AAMI,MAAA,IAAI,EAAEF,KAAK,CAACU,IANhB,CAOG;AAPH;AAQI,MAAA,GAAG,EAAEV,KAAK,CAACW,GARf;AASI,MAAA,GAAG,EAAEX,KAAK,CAACY,GATf;AAUI,MAAA,iBAAiB,EAAC,IAVtB;AAWI,MAAA,QAAQ,EAAEZ,KAAK,CAACa;AAXpB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAeI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,iBAAf;AAAiC,MAAA,YAAY,MAA7C;AAAA,gBACKb,KAAK,CAACc;AADX;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA9BuBf,c;UACJL,S;;;KADIK,c","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}