{"ast":null,"code":"var values=[];export default function mergeSort(rects2){var rects=rects2.slice();values=[];var sz=rects2.length;// console.log( \"fdsfsd\",sz );\nsz=sz-1;mergeS(rects,0,sz);return values;}function merge(rects,l,m,r){//  console.log(l,\" \",r);\nvar n1=m-l+1;var n2=r-m;var L=rects.slice(l,m+1);var R=rects.slice(m+1,r+1);var i=0;var j=0;var k=l;while(i<n1&&j<n2){if(L[i].width<=R[j].width){rects[k]=L[i];i++;}else{rects[k]=R[j];j++;}k++;}while(i<n1){rects[k]=L[i];i++;k++;}while(j<n2){rects[k]=R[j];j++;k++;}}function mergeS(rects,l,r){if(l>=r)return;var m=l+(r-l)/2;m=Math.floor(m);// console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\nmergeS(rects,l,m);mergeS(rects,m+1,r);merge(rects,l,m,r);var rectsCopy=rects.slice(l,r+1);var value={left:l,right:r,mid:m,val:rectsCopy};values.push(value);}","map":{"version":3,"sources":["C:/Users/Acer/Desktop/New folder/Algorithm-Visualizer/src/algorithms/mergeSort.js"],"names":["values","mergeSort","rects2","rects","slice","sz","length","mergeS","merge","l","m","r","n1","n2","L","R","i","j","k","width","Math","floor","rectsCopy","value","left","right","mid","val","push"],"mappings":"AAAA,GAAIA,CAAAA,MAAM,CAAG,EAAb,CACA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,MAAnB,CAA0B,CACrC,GAAIC,CAAAA,KAAK,CAAGD,MAAM,CAACE,KAAP,EAAZ,CACAJ,MAAM,CAAG,EAAT,CACA,GAAIK,CAAAA,EAAE,CAAGH,MAAM,CAACI,MAAhB,CACD;AACCD,EAAE,CAAGA,EAAE,CAAC,CAAR,CACAE,MAAM,CAACJ,KAAD,CAAO,CAAP,CAASE,EAAT,CAAN,CACA,MAAOL,CAAAA,MAAP,CACH,CAED,QAASQ,CAAAA,KAAT,CAAeL,KAAf,CAAsBM,CAAtB,CAAyBC,CAAzB,CAA4BC,CAA5B,CAA8B,CAC5B;AACE,GAAIC,CAAAA,EAAE,CAAGF,CAAC,CAACD,CAAF,CAAI,CAAb,CACA,GAAII,CAAAA,EAAE,CAAGF,CAAC,CAACD,CAAX,CAEA,GAAMI,CAAAA,CAAC,CAAGX,KAAK,CAACC,KAAN,CAAYK,CAAZ,CAAeC,CAAC,CAAC,CAAjB,CAAV,CACA,GAAMK,CAAAA,CAAC,CAAGZ,KAAK,CAACC,KAAN,CAAYM,CAAC,CAAC,CAAd,CAAgBC,CAAC,CAAC,CAAlB,CAAV,CACA,GAAIK,CAAAA,CAAC,CAAG,CAAR,CACA,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,GAAIC,CAAAA,CAAC,CAAGT,CAAR,CACA,MAAMO,CAAC,CAACJ,EAAF,EAAQK,CAAC,CAACJ,EAAhB,CAAmB,CACf,GAAIC,CAAC,CAACE,CAAD,CAAD,CAAKG,KAAL,EAAcJ,CAAC,CAACE,CAAD,CAAD,CAAKE,KAAvB,CAA8B,CAC1BhB,KAAK,CAACe,CAAD,CAAL,CAAWJ,CAAC,CAACE,CAAD,CAAZ,CACAA,CAAC,GACJ,CAHD,IAGM,CACFb,KAAK,CAACe,CAAD,CAAL,CAAWH,CAAC,CAACE,CAAD,CAAZ,CACAA,CAAC,GACJ,CACDC,CAAC,GACJ,CACD,MAAOF,CAAC,CAAGJ,EAAX,CAAe,CACXT,KAAK,CAACe,CAAD,CAAL,CAAWJ,CAAC,CAACE,CAAD,CAAZ,CACAA,CAAC,GACDE,CAAC,GACJ,CACD,MAAOD,CAAC,CAAGJ,EAAX,CAAe,CACXV,KAAK,CAACe,CAAD,CAAL,CAAWH,CAAC,CAACE,CAAD,CAAZ,CACAA,CAAC,GACDC,CAAC,GACJ,CAEJ,CAED,QAASX,CAAAA,MAAT,CAAgBJ,KAAhB,CAAsBM,CAAtB,CAAwBE,CAAxB,CAA0B,CAEtB,GAAIF,CAAC,EAAEE,CAAP,CAAW,OACX,GAAID,CAAAA,CAAC,CAAGD,CAAC,CAAE,CAACE,CAAC,CAACF,CAAH,EAAM,CAAjB,CACAC,CAAC,CAAGU,IAAI,CAACC,KAAL,CAAWX,CAAX,CAAJ,CACD;AACCH,MAAM,CAACJ,KAAD,CAAOM,CAAP,CAASC,CAAT,CAAN,CACAH,MAAM,CAACJ,KAAD,CAAOO,CAAC,CAAC,CAAT,CAAWC,CAAX,CAAN,CACAH,KAAK,CAACL,KAAD,CAAOM,CAAP,CAASC,CAAT,CAAWC,CAAX,CAAL,CACA,GAAIW,CAAAA,SAAS,CAAGnB,KAAK,CAACC,KAAN,CAAYK,CAAZ,CAAcE,CAAC,CAAC,CAAhB,CAAhB,CACA,GAAIY,CAAAA,KAAK,CAAG,CACRC,IAAI,CAACf,CADG,CAERgB,KAAK,CAACd,CAFE,CAGRe,GAAG,CAAChB,CAHI,CAIRiB,GAAG,CAACL,SAJI,CAAZ,CAMAtB,MAAM,CAAC4B,IAAP,CAAYL,KAAZ,EACH","sourcesContent":["let values = [];\r\nexport default function mergeSort(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n   // console.log( \"fdsfsd\",sz );\r\n    sz = sz-1;\r\n    mergeS(rects,0,sz);\r\n    return values;\r\n}\r\n\r\nfunction merge(rects, l, m, r){\r\n  //  console.log(l,\" \",r);\r\n    let n1 = m-l+1;\r\n    let n2 = r-m;\r\n\r\n    const L = rects.slice(l, m+1);\r\n    const R = rects.slice(m+1,r+1);\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = l;\r\n    while(i<n1 && j<n2){\r\n        if( L[i].width <= R[j].width ){\r\n            rects[k] = L[i];\r\n            i++;\r\n        } else{\r\n            rects[k] = R[j];\r\n            j++;\r\n        }\r\n        k++;\r\n    }\r\n    while (i < n1) {\r\n        rects[k] = L[i];\r\n        i++;\r\n        k++;\r\n    }\r\n    while (j < n2) {\r\n        rects[k] = R[j];\r\n        j++;\r\n        k++;\r\n    }\r\n\r\n}\r\n\r\nfunction mergeS(rects,l,r){\r\n\r\n    if( l>=r ) return;\r\n    let m = l+ (r-l)/2;\r\n    m = Math.floor(m);\r\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\r\n    mergeS(rects,l,m);\r\n    mergeS(rects,m+1,r);\r\n    merge(rects,l,m,r);\r\n    let rectsCopy = rects.slice(l,r+1);\r\n    let value = {\r\n        left:l,\r\n        right:r,\r\n        mid:m,\r\n        val:rectsCopy\r\n    }\r\n    values.push(value);\r\n}"]},"metadata":{},"sourceType":"module"}