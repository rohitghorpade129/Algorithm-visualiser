{"version":3,"sources":["pathfinderComponents/node.jsx","pathfinderComponents/grid.jsx","pathfinderComponents/simpleSelect.jsx","pathfinderComponents/navbar.jsx","pathfinderComponents/menu.jsx","algorithms/dijkstra.js","algorithms/recursiveMaze.js","algorithms/bfs.jsx","pathfinderComponents/pathfinder.jsx","algorithms/randomMaze.js","homeComponents/navbar.jsx","homeComponents/greet.jsx","homeComponents/typewriter.jsx","homeComponents/images/graph.png","homeComponents/card.jsx","homeComponents/card2.jsx","homeComponents/images/primes.jpg","homeComponents/sort.png","homeComponents/images/binaryTree.png","homeComponents/images/queen.PNG","homeComponents/images/convexHull.png","homeComponents/images/15puzzle.PNG","homeComponents/images/sudoku.png","homeComponents/cards.jsx","homeComponents/cardDetails.js","homeComponents/home.jsx","primeComponents/cell.jsx","primeComponents/cells.jsx","primeComponents/navbar.jsx","primeComponents/slider.jsx","primeComponents/simpleSelect.jsx","primeComponents/menu.jsx","primeComponents/seive.jsx","sortComponents/rect.jsx","sortComponents/rects.jsx","algorithms/sortingAlgorithms.js","algorithms/quickSort.js","sortComponents/navbar.jsx","sortComponents/slider.jsx","sortComponents/simpleSelect.jsx","sortComponents/airBnbSlider.jsx","sortComponents/doubleSlider.jsx","sortComponents/formControlLabel.jsx","sortComponents/menu.jsx","sortComponents/sort.js","queenComponents/queen.png","queenComponents/cell.jsx","queenComponents/cells.jsx","queenComponents/navbar.jsx","queenComponents/slider.jsx","queenComponents/menu.jsx","queenComponents/queen.jsx","convexHullComponents/timer.jsx","algorithms/grahamScan.js","convexHullComponents/canvas.jsx","convexHullComponents/navbar.jsx","convexHullComponents/slider.jsx","convexHullComponents/menu.jsx","convexHullComponents/convexHull.jsx","binarySearchComponent/entryPoint.jsx","binarySearchComponent/doubleSlider.jsx","binarySearchComponent/guess.jsx","binarySearchComponent/result.jsx","binarySearchComponent/search.jsx","binarySearchComponent/navbar.jsx","binarySearchComponent/binarySearch.jsx","recursiveSortComponents/rect.jsx","recursiveSortComponents/rects.jsx","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/quickSortRecursive.js","recursiveSortComponents/navbar.jsx","recursiveSortComponents/slider.jsx","recursiveSortComponents/simpleSelect.jsx","recursiveSortComponents/airBnbSlider.jsx","recursiveSortComponents/doubleSlider.jsx","recursiveSortComponents/menu.jsx","recursiveSortComponents/recursiveSort.js","App.js","reportWebVitals.js","index.js"],"names":["Node","static","row","props","col","this","onMouseDown","isVisited","onMouseEnter","onMouseUp","id","className","getClassName","node","isWall","isStartNode","isEndNode","ispathNode","Component","Grid","state","grid","map","rowidx","nodeidx","visitedNode","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","age","setAge","FormControl","InputLabel","Select","labelId","value","onChange","event","target","onAlgoChanged","items","item","itemidx","MenuItem","Navbar","type","to","style","color","Menu","algorithms","onMazeChanged","mazes","onClick","onCreateMaze","onVisualize","onClearPath","onClearBoard","dijkstra","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","push","getAllNodes","length","sortNodesByDistance","closestNode","shift","Infinity","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","decideMaze","pairs","board","startRow","endRow","startCol","endCol","mid","Math","floor","random","start","end","i","xx","yy","recursiveMazeVertical","recursiveMazeHorizontal","bfsdfs","endNode","algo","list","nodesInOrder","currentNode","pop","nodesToPush","getNeighbours","Pathfinder","handleMouseDown","newGrid","getNewGridWithWallToggled","setState","mouseIsPressed","handleMouseEnter","handleMouseUp","handleAlgoChanged","val","handleMazeChanged","maze","handleCreateMaze","newBoard","slice","j","randomMaze","getMaze","setTimeout","document","getElementById","handleClearBoard","clearBoard","handleClearPath","clearPath","handleClick","visualizeDijkstra","width","window","innerWidth","height","innerHeight","max","console","log","getInitialGrid","textAlign","nodesInShortestPathOrder","unshift","getNodesInShortestPathOrder","animateDijkstra","a","sleep","animateShortestPath","toggleVisit","newNode","totRow","totCol","currentRow","createNode","ms","Promise","resolve","class","href","card","maxWidth","minHeight","borderRadius","boxShadow","media","actionArea","padding","transition","transform","expand","marginLeft","transitions","create","duration","shortest","expandOpen","ImgMediaCard2","expanded","setExpanded","CardActionArea","m","Card","route","CardMedia","component","alt","title","src","img","CardHeader","backgroundColor","action","IconButton","clsx","Collapse","in","timeout","unmountOnExit","CardContent","Typography","description","Cards","cards","getData","e","graph","primes","binSearch","Fragment","toLowerCase","includes","Home","Cell","getClass","cell","isVisiting","isChecking","isPrime","Cells","cells","cellidx","root","valuetext","DiscreteSlider","gutterBottom","Slider","defaultValue","default","getAriaValueText","valueLabelDisplay","onChangeCommitted","innerText","num","parseInt","step","marks","min","isDisabled","selected","isClickable","cursor","onRefresh","disabled","onChangeSpeed","onChangeValues","Seive","number","isRunning","speed","changeSpeed","handleValueIncease","getCells","handleRefresh","startSeive","prime","changedCells","prevCheck","getNewCellPrimeToggled","getNewCellVisitingToggled","getNewCellCheckToggled","pos","newCells","newCell","rows","createCell","Rect","checkColor","rect","isSorted","isSorting","background","marg","Rects","rects","rectidx","selectionSort","arr","n","prevRect","min_idx","changed","recti","rectj","bubbleSort","insertionSort","key","values","quickSort","rects2","sz","quick","left","right","partition","pivot","it","rect1","rect2","getPartition","onCountChange","disable","withStyles","thumb","border","marginRight","active","track","rail","opacity","CSlider","RangeSlider","setValue","newValue","SwitchLabels","checkedA","FormGroup","FormControlLabel","control","Switch","checked","name","onDoubleChange","label","onRandomize","onSpeedChange","onViusalize","Sort","count","doubles","isRunning1","isRunning2","algo1","algo2","handleRandomize","getInitialRects","handleDouble","handleCountChange","handleSpeedChanged","handleSort","steps1","steps2","handleFirst","handleSecond","steps","tot","getRect","isAttacked","isCurrent","isPresent","isChecked","getStyled","queen","onClear","Queen","handleStop","handleSpeedChange","handleQueenChange","getBoard","handleClear","handleTurnOff","turnOffAttack","startAlgo","queensAlgo","newBoard2","result","getChecked","onStop","N","cols","getCell","cw","b","c","ccw","Canvas","dots","lines","canvasWidth","canvasHeight","animateLine","canvas2","canvasLineRef","current","ctx2","getContext","clearRect","fillStyle","strokeStyle","onGoing","beginPath","add","lineWidth","moveTo","from","arc","PI","fill","closePath","lineTo","stroke","onTurnOff","myRef","createRef","redrawDots","prevProps","prevState","snapshot","ref","canvas","ctx","res","points","size","pointStart","pointEnd","up","down","convex_hull","ConvexHull","isALgoLive","handleRefreshDots","handleAlgoStateChanged","isAlgoLive","handleVisualize","getNewDots","handleMoreDot","dot","getDot","rowpos","EntryPoint","error","setUpper","validateNumbers","TextField","variant","upper","startGame","lower","useEffect","Guess","getMid","justifyContent","yesButton","noButton","Result","onRestart","Search","BinarySearch","handleStartGame","handleRestart","handleYes","handleNo","handleSetUpper","isLeft","isRight","checkBorder","isRange","mergeSort","mergeS","l","r","n1","n2","L","R","k","merge","HeapSort","heapify","temp","sorted","heapSort","largest","quickSortRecursive","swap","changedRange","RecursiveSort","handleMerge","handleHeap","handleQuick","hasChanged","ii","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6be60bd2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './node.css'\r\nclass Node extends Component {\r\n    static = {\r\n        row: this.props.row,\r\n        col: this.props.col\r\n    }\r\n    render() {\r\n        const { row,col,isVisited, onMouseDown, onMouseEnter,onMouseUp } = this.props;\r\n        return (\r\n            <div\r\n                id = {`node-${this.props.row}-${this.props.col}`}\r\n                className={this.getClassName()}\r\n                onMouseDown={() => onMouseDown(row,col)}\r\n                onMouseEnter={() => onMouseEnter(row,col)}\r\n                onMouseUp={() => onMouseUp(row,col)}\r\n            />\r\n        );\r\n    }\r\n    getClassName(){\r\n        if(this.props.node.isWall === true){\r\n            return \"node node-wall\";\r\n        } else if( this.props.node.isStartNode === true ){\r\n            return \"node  node-start\";\r\n        } else if( this.props.node.isEndNode === true ){\r\n            return \"node  node-end\";\r\n        } else if(this.props.node.ispathNode){\r\n            return 'node node-shortest-path';\r\n        }else if( this.props.node.isVisited === true ){\r\n            return \"node  node-visited\";\r\n        } else{\r\n            return \"node\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Node;","import React, {Component} from 'react';\r\nimport Node from \"./node\";\r\nimport './grid.css';\r\nclass Grid extends Component {\r\n    state = {\r\n        grid: this.props.grid\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Grid\">\r\n                {this.props.grid.map((row, rowidx) => {\r\n                    return (\r\n                        <div key={rowidx}>\r\n                            {row.map((node, nodeidx) => {\r\n                                const {row, col, isWall, visitedNode, } = node;\r\n                                return (\r\n                                    <Node\r\n                                        key={nodeidx}\r\n                                        row={row}\r\n                                        col={col}\r\n                                        node={node}\r\n                                        isWall={isWall}\r\n                                        visitedNode={ visitedNode }\r\n                                        onMouseDown = {this.props.onMouseDown}\r\n                                        onMouseEnter = {this.props.onMouseEnter}\r\n                                        onMouseUp = {this.props.onMouseUp}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    {props.items.map( (item,itemidx)=>{\r\n                        return(\r\n                            <MenuItem\r\n                                key={itemidx}\r\n                                value={itemidx}>{item}</MenuItem>\r\n                        );\r\n                    } )}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React, {Component} from 'react';\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Pathfinder</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport SimpleSelect from \"./simpleSelect\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\" >\r\n                <SimpleSelect\r\n                    onAlgoChanged = {this.props.onAlgoChanged}\r\n                    items={this.props.algorithms}\r\n                />\r\n                <SimpleSelect\r\n                    onAlgoChanged={this.props.onMazeChanged}\r\n                    items={this.props.mazes}\r\n                />\r\n                <button\r\n                    className='btn btn-lg btn-secondary m-2'\r\n                    onClick={this.props.onCreateMaze}>\r\n                    Create Maze\r\n                </button>\r\n                <button\r\n                    onClick={this.props.onVisualize}\r\n                    className=\"btn btn-warning btn-lg\"\r\n                >Visualize</button>\r\n                <button\r\n                    onClick={this.props.onClearPath}\r\n                    className='btn btn-danger btn-lg m-2'>Clear Path</button>\r\n                <button\r\n                    onClick={this.props.onClearBoard}\r\n                    className='btn btn-danger btn-lg m-2'>Clear Board</button>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","// Performs Dijkstra's algorithm; returns *all* nodes in the order\r\n// in which they were visited. Also makes nodes point back to their\r\n// previous node, effectively allowing us to compute the shortest path\r\n// by backtracking from the finish node.\r\nexport function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (closestNode.isWall) continue;\r\n    // If the closest node is at a distance of infinity,\r\n    // we must be trapped and should therefore stop.\r\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    if (closestNode === finishNode) return visitedNodesInOrder;\r\n    updateUnvisitedNeighbors(closestNode, grid);\r\n  }\r\n}\r\n\r\nfunction sortNodesByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const {col, row} = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter(neighbor => !neighbor.isVisited);\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called *after* the dijkstra method above.\r\nexport function getNodesInShortestPathOrder(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n","export function getMaze(board,row,col){\r\n    const pairs = [];\r\n    let newBoard = board.slice();\r\n    for( let i = 0;i <col;i++){\r\n        newBoard[0][i].isWall = true;\r\n        pairs.push({\r\n            xx:0,\r\n            yy:i\r\n        });\r\n    }\r\n    for( let i = 0;i <row;i++){\r\n        newBoard[i][col-1].isWall = true;\r\n        pairs.push({\r\n            xx:i,\r\n            yy:col-1\r\n        });\r\n    }\r\n    for( let i = col-1;i>=0;i-- ){\r\n        newBoard[row-1][i].isWall = true;\r\n        pairs.push({\r\n            xx:row-1,\r\n            yy:i\r\n        });\r\n    }\r\n    for(let i = row-1;i>=0;i--){\r\n        newBoard[i][0].isWall = true;\r\n        pairs.push({\r\n            xx:i,\r\n            yy:0\r\n        });\r\n    }\r\n    decideMaze(pairs,newBoard,1,row-2,1,col-2);\r\n    //console.log(\"here\");\r\n    return pairs;\r\n}\r\nlet val = 0;\r\n\r\nfunction decideMaze(pairs,board,startRow,endRow,startCol,endCol) {\r\n    //console.log(\"count\");\r\n    val++;\r\n\r\n    if( ((endRow-startRow) <=1) && ((endCol - startCol) <=1) ){\r\n        return;\r\n    }\r\n\r\n     if( (endCol - startCol) > (endRow - startRow) ){\r\n        recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol);\r\n    } else{\r\n        recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol);\r\n    }\r\n}\r\nfunction recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol){\r\n    let mid = Math.floor((endCol+startCol)/2);\r\n    let random = Math.floor(Math.random() * (endRow-startRow+1)) + startRow;\r\n    //console.log( \"row \",random,\" \",startRow,\" \",endRow );\r\n    let start = startRow;\r\n    if( !board[startRow-1][mid].isWall ){\r\n        random = start;\r\n        start++;\r\n    }\r\n    let end = endRow;\r\n    if( !board[endRow+1][mid].isWall ){\r\n        random = end;\r\n        end--;\r\n    }\r\n    for(let i = start;i<=end;i++){\r\n        if( i!==random ){\r\n            board[i][mid].isWall = true;\r\n            pairs.push({\r\n                xx:i,\r\n                yy:mid\r\n            });\r\n        }\r\n    }\r\n    decideMaze(pairs,board,startRow,endRow,startCol,mid-1);\r\n    decideMaze(pairs,board,startRow,endRow,mid+1,endCol);\r\n}\r\nfunction recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol){\r\n    let mid = Math.floor((endRow+startRow)/2);\r\n  //  console.log(\"mid: \",mid);\r\n    let random = Math.floor(Math.random() * (endCol-startCol+1)) + startCol;\r\n    let start = startCol;\r\n    if( !board[mid][startCol-1].isWall ){\r\n        random = start;\r\n        start++;\r\n    }\r\n    let end = endCol;\r\n    if( !board[mid][endCol+1].isWall ){\r\n        random = end;\r\n        end--;\r\n    }\r\n    for(let i = start;i<=end;i++){\r\n        if( i!==random ){\r\n            board[mid][i].isWall = true;\r\n            pairs.push({\r\n                xx:mid,\r\n                yy:i\r\n            });\r\n        }\r\n    }\r\n    decideMaze(pairs,board,startRow,mid-1,startCol,endCol);\r\n    decideMaze(pairs,board,mid+1,endRow,startCol,endCol);\r\n\r\n}","export function bfsdfs(grid,startNode,endNode,algo){\r\n    var list = [];\r\n    const nodesInOrder = [];\r\n    nodesInOrder.push(startNode);\r\n    list.push(startNode);\r\n    startNode.isVisited = true;\r\n    while(!!list.length){\r\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\r\n        nodesInOrder.push(currentNode);\r\n        if( currentNode === endNode ) return nodesInOrder;\r\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\r\n        const nodesToPush = getNeighbours(grid,currentNode);\r\n        for( const node of nodesToPush ){\r\n            if(algo === \"bfs\"){\r\n                node.isVisited = true;\r\n            }\r\n            node.previousNode = currentNode;\r\n            list.push(node);\r\n\r\n        }\r\n    }\r\n    return nodesInOrder;\r\n}\r\n\r\nfunction getNeighbours(grid,node){\r\n    const neighbors = [];\r\n    const {col, row} = node;\r\n   // console.log(node);\r\n\r\n    if (col > 0) neighbors.push(grid[row][col - 1]);\r\n    if (row > 0) neighbors.push(grid[row - 1][col]);\r\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\r\n}","import React, {Component, Fragment} from 'react';\r\nimport Grid from \"./grid\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\r\nimport {getMaze} from \"../algorithms/recursiveMaze\";\r\nimport {bfsdfs} from \"../algorithms/bfs\";\r\nimport {randomMaze} from \"../algorithms/randomMaze\";\r\n\r\nclass Pathfinder extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            grid:[],\r\n            mouseIsPressed:false,\r\n            algorithms:[\r\n                \"Dijsktra\",\"BFS\",\"DFS\"\r\n            ],\r\n            algo:0,\r\n            mazes:[\r\n                \"Recursive division\",\"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"\r\n            ],\r\n            maze:0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const row = Math.max(Math.floor(height/25)-7,10);\r\n        const col = Math.floor(width/25);\r\n        const startNode = {\r\n            row:4,\r\n            col:4\r\n        };\r\n        const endNode = {\r\n            row: row-5,\r\n            col: col-5\r\n        }\r\n        console.log( endNode.row );\r\n        const grid = getInitialGrid(row,col);\r\n        grid[startNode.row][startNode.col].isStartNode = true;\r\n        grid[row-5][col-5].isEndNode = true;\r\n        this.setState({grid,row,col,startNode,endNode});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Navbar/>\r\n\r\n                <Menu\r\n                    onAlgoChanged = {this.handleAlgoChanged}\r\n                    onVisualize = {this.handleClick}\r\n                    algorithms={this.state.algorithms}\r\n                    mazes={this.state.mazes}\r\n                    onMazeChanged={this.handleMazeChanged}\r\n                    onCreateMaze={this.handleCreateMaze}\r\n                    onClearBoard={this.handleClearBoard}\r\n                    onClearPath={this.handleClearPath}\r\n                />\r\n                <span style={{margin: 2}}/>\r\n                <div style={{textAlign:\"center\"}} >\r\n                    <Grid\r\n                        grid={this.state.grid}\r\n                        onMouseDown={this.handleMouseDown}\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    handleMouseDown = (row, col) => {\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n        this.setState({mouseIsPressed: true});\r\n    }\r\n\r\n    handleMouseEnter = (row, col) => {\r\n        if (this.state.mouseIsPressed === false) return;\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n    }\r\n\r\n    handleMouseUp = (row,col) => {\r\n        this.setState({mouseIsPressed: false});\r\n    }\r\n\r\n    handleAlgoChanged = (val) =>{\r\n        this.setState({algo:val});\r\n    }\r\n\r\n    handleMazeChanged = (val)=>{\r\n        this.setState({maze:val});\r\n    }\r\n\r\n    handleCreateMaze = () =>{\r\n        let pairs;\r\n        switch (this.state.maze){\r\n            case 1:\r\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\r\n                break;\r\n            default:\r\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\r\n        }\r\n        const {startNode,endNode} = this.state;\r\n        for( let i = 0;i<pairs.length;i++ ){\r\n            setTimeout(()=>{\r\n                if( i === pairs.length-1 ){\r\n                   // this.setState({grid:this.state.grid});\r\n                    const grid = this.state.grid;\r\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\r\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\r\n                    this.setState({grid});\r\n                }\r\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\r\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\r\n                }\r\n            },i*20);\r\n        }\r\n    }\r\n    handleClearBoard = ()=>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearBoard(grid,row,col)});\r\n    }\r\n    handleClearPath = () =>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearPath(grid,row,col)});\r\n    }\r\n    handleClick = () =>{\r\n      /*  for(let i = 0;i<20;i++){\r\n            for(let j = 0; j<50;j++){\r\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\r\n            }\r\n        }*/\r\n        this.visualizeDijkstra();\r\n        /*for(let i = 0;i<this.state.row;i++){\r\n            for(let j = 0; j<this.state.col;j++){\r\n                setTimeout(()=>{\r\n                    const newGrid = toggleVisit(this.state.grid,i,j);\r\n                    this.setState({grid:newGrid});\r\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\r\n                },100*(i+j)+j);\r\n            }\r\n        }*/\r\n    }\r\n\r\n    visualizeDijkstra() {\r\n        const {grid} = this.state;\r\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\r\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\r\n        let visitedNodesInOrder;\r\n        switch (this.state.algo){\r\n            case 0:\r\n                visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n                break;\r\n            case 1:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\r\n                break;\r\n            default:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\r\n        }\r\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    }\r\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n\r\n            if (i === visitedNodesInOrder.length) {\r\n              //  setTimeout(() => {\r\n                    await sleep(100);\r\n                    await this.animateShortestPath(nodesInShortestPathOrder);\r\n\r\n              //  }, 10 * (i+10));\r\n                return;\r\n            }\r\n           // setTimeout(() => {\r\n                const node = visitedNodesInOrder[i];\r\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\r\n                //this.setState({grid:newGrid});\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-visited';\r\n                await sleep(10);\r\n           // }, 10 * i);\r\n        }\r\n    }\r\n\r\n    async animateShortestPath(nodesInShortestPathOrder) {\r\n        const grid = this.state.grid;\r\n        const newGrid = grid.slice();\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n         //   setTimeout(() => {\r\n\r\n                const node = nodesInShortestPathOrder[i];\r\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\r\n                newGrid[node.row][node.col] = newNode;\r\n                if( i === nodesInShortestPathOrder.length-1 ){\r\n                    this.setState({grid:newGrid});\r\n                }\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-shortest-path';\r\n                await sleep(50);\r\n            //}, 50 * i);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst clearPath = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\nconst clearBoard = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                isWall: false,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\n\r\nconst toggleVisit = (grid,row,col) =>{\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        visitedNode: !node.visitedNode\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n}\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        isWall: true//!node.isWall,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n};\r\nconst getInitialGrid = (totRow,totCol) => {\r\n    const grid = [];\r\n    for (let row = 0; row < totRow; row++) {\r\n        const currentRow = [];\r\n        for (let col = 0; col < totCol; col++) {\r\n            currentRow.push(createNode(row,col));\r\n        }\r\n        grid.push(currentRow);\r\n    }\r\n    return grid;\r\n}\r\n\r\nconst createNode = (row,col)=>{\r\n    return {\r\n        row,\r\n        col,\r\n        isWall: false,\r\n        isStartNode:false,\r\n        isEndNode:false,\r\n        distance:Infinity,\r\n        visitedNode: false,\r\n        isVisited:false,\r\n        ispathNode:false,\r\n        previousNode:null\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default Pathfinder;","export function randomMaze(board,row,col){\r\n    let newBoard = board.slice();\r\n    const pairs = [];\r\n    for(let i = 0;i<row;i++){\r\n        for( let j = 0;j <col;j++){\r\n            const random = Math.floor(Math.random()*100)+10;\r\n            if( random%4 === 0 ){\r\n                newBoard[i][j].isWall = true;\r\n                pairs.push({\r\n                    xx:i,\r\n                    yy:j\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return pairs;\r\n}","import React, {Component} from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav class=\"navbar navbar-dark bg-primary\">\r\n                <a className=\"navbar-brand\" href=\"#\">Algorithm Visualizer</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport \"./style.css\"\r\nclass Greet extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"greet\">\r\n                <h1 className=\"display-3\">\r\n                    Algorithm Visualizer\r\n                </h1>\r\n                <hr className=\"dropdown-divider\"/>\r\n                <h1 className=\"display-5\">\r\n                    Visualize algorithms for a better understanding\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Greet;","import React, {Component} from 'react';\r\nimport Typewriter from \"typewriter-effect\";\r\nimport './style.css'\r\nclass TypeWriterC extends Component {\r\n    state = {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"type display-3\">\r\n                <span className=\"badge badge-dark\">\r\n                <Typewriter\r\n                    options={{\r\n                        strings: ['Graph Algorithms', 'Sorting Algorithms',\"8 Queen\"],\r\n                        autoStart: true,\r\n                        loop: true,\r\n                    }}\r\n                />\r\n            </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TypeWriterC;","export default __webpack_public_path__ + \"static/media/graph.6e6849d5.png\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport \"./style.css\";\r\nimport \"./images/graph.png\";\r\nimport {ExpandMore} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 350,\r\n        maxWidth:350,\r\n        minHeight:250,\r\n        borderRadius: 5,\r\n        '&:hover': {\r\n            boxShadow: `0 6px 12px 0 #000000\r\n                .rotate(-12)\r\n                .darken(0.2)\r\n                .fade(0.5)}`\r\n                ,\r\n        },\r\n    },\r\n    media: {\r\n        height: 140\r\n    },\r\n    actionArea: {\r\n        padding:15,\r\n        transition: '0.2s',\r\n        '&:hover': {\r\n            transform: 'scale(1.1)',\r\n\r\n        },\r\n    },\r\n});\r\n\r\nexport default function ImgMediaCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <CardActionArea className={classes.actionArea} m={20}>\r\n            <Card\r\n                className={classes.card}\r\n                >\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Contemplative Reptile\"\r\n                    height=\"140\"\r\n                    src={props.card.img}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\"  >\r\n                        {props.card.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.card.description}\r\n                    </Typography>\r\n                    <ExpandMore/>\r\n                </CardContent>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport \"./style.css\";\r\nimport \"./images/graph.png\";\r\nimport {ExpandMore} from \"@material-ui/icons\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        minWidth: 350,\r\n        maxWidth:350,\r\n        minHeight:200,\r\n        borderRadius: 5,\r\n        '&:hover': {\r\n            boxShadow: `0 6px 12px 0 #000000\r\n                .rotate(-12)\r\n                .darken(0.2)\r\n                .fade(0.5)}`\r\n                ,\r\n        },\r\n    },\r\n    media: {\r\n        height: 100\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    actionArea: {\r\n        padding:15,\r\n        transition: '0.2s',\r\n        '&:hover': {\r\n            transform: 'scale(1.1)',\r\n\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ImgMediaCard2(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <CardActionArea className={classes.actionArea} m={20}>\r\n            <Card\r\n                className={classes.card}\r\n                >\r\n               <Link to={props.card.route}>\r\n                   <CardMedia\r\n                       component=\"img\"\r\n                       alt={props.card.title}\r\n                       height=\"150\"\r\n                       src={props.card.img}\r\n                   />\r\n               </Link>\r\n                <CardHeader\r\n                    title={props.card.title}\r\n                    style={{backgroundColor:\"whitesmoke\"}}\r\n                    action={\r\n                        <IconButton\r\n                            className={clsx(classes.expand, {\r\n                                [classes.expandOpen]: expanded,\r\n                            })}\r\n                            onClick={handleExpandClick}\r\n                            aria-expanded={expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent\r\n                        style={{backgroundColor:\"whitesmoke\"}}\r\n                    >\r\n                        <Typography>\r\n                            {props.card.description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/primes.72a2f33f.jpg\";","export default __webpack_public_path__ + \"static/media/sort.117e08fc.png\";","export default __webpack_public_path__ + \"static/media/binaryTree.6d8ce938.png\";","export default __webpack_public_path__ + \"static/media/queen.70cba2dd.PNG\";","export default __webpack_public_path__ + \"static/media/convexHull.2720e7cd.png\";","export default __webpack_public_path__ + \"static/media/15puzzle.5f6e8f37.PNG\";","export default __webpack_public_path__ + \"static/media/sudoku.58363375.png\";","import React, {Component} from 'react';\r\nimport ImgMediaCard from \"./card\";\r\nimport ImgMediaCard2 from \"./card2\";\r\nimport \"./style.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport graph from \"./images/graph.png\";\r\nimport primes from \"./images/primes.jpg\"\r\nimport sort from \"./sort.png\"\r\nimport queen from './images/queen.PNG'\r\nimport binSearch from './images/binaryTree.png'\r\nimport {getDetails} from \"./cardDetails\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nclass Cards extends Component {\r\n\r\n    state = {\r\n        cards:[],\r\n        filter:\"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({cards:getDetails()});\r\n    }\r\n    getData = (e)=>{\r\n        console.log(e.target.value);\r\n        this.setState({filter:e.target.value});\r\n    }\r\n    render() {\r\n        return (\r\n           <React.Fragment>\r\n               \r\n               <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5\" >\r\n                   {\r\n                       this.state.cards.filter((card) => card.title.toLowerCase().includes(this.state.filter.toLowerCase())||card.description.toLowerCase().includes(this.state.filter.toLowerCase())).map(card=>(\r\n                           <div>\r\n                               <ImgMediaCard2\r\n                                   className=\"d-flex flex-wrap\"\r\n                                   key={card.id}\r\n                                   card={card}/>\r\n                           </div>\r\n                       ))\r\n                   }\r\n\r\n               </div>\r\n           </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cards;\r\n/*\r\n<div>\r\n   <ImgMediaCard2\r\n       className=\"d-flex flex-wrap\"\r\n       key={card.id}\r\n       card={card}/>\r\n</div>\r\n */","import graph from \"./images/graph.png\";\r\nimport primes from \"./images/primes.jpg\";\r\nimport sort from \"./sort.png\";\r\nimport queen from \"./images/queen.PNG\";\r\nimport binSearch from \"./images/binaryTree.png\";\r\nimport convex from './images/convexHull.png';\r\nimport puzzle from './images/15puzzle.PNG';\r\nimport sudoku from './images/sudoku.png';\r\nexport function getDetails(){\r\n   return [\r\n       {\r\n           id:1,\r\n           title:\"Pathfinder\",\r\n           description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",\r\n           route:\"/pathfinder\",\r\n           img:graph\r\n       },\r\n        {\r\n            id:2,\r\n            title:\"Prime Numbers\",\r\n            description:\"Visualize how Seive is better than brute force\",\r\n            route:\"/prime\",\r\n            img:primes\r\n        },\r\n       {\r\n           id:3,\r\n           title:\"Sorting Algorithm\",\r\n           description:\"Compare different sorting algorithms\",\r\n           route:\"/sort\",\r\n           img:sort\r\n       },\r\n    //    {\r\n    //        id:9,\r\n    //        title:\"Recursive Sorting\",\r\n    //        description:\"Compare different recursive sorting algorithms\",\r\n    //        route:\"/recursivesort\",\r\n    //        img:sort\r\n    //    },\r\n    //    {\r\n    //        id:4,\r\n    //        title:\"N Queen\",\r\n    //        description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\r\n    //        route:\"/nqueen\",\r\n    //        img:queen\r\n    //    },\r\n    //    {\r\n    //        id:5,\r\n    //        title:\"Convex Hull\",\r\n    //        description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\r\n    //        route:\"/convexhull\",\r\n    //        img:convex\r\n    //    },\r\n       {\r\n           id:7,\r\n           title:\"Binary Search\",\r\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\r\n           route:\"/binarysearch\",\r\n           img:binSearch\r\n       },\r\n    //    {\r\n    //        id:6,\r\n    //        title:\"Sudoku\",\r\n    //        description:\"Coming soon...\",\r\n    //        route:\"/\",\r\n    //        img:sudoku\r\n    //    },\r\n\r\n    //    {\r\n    //        id:8,\r\n    //        title:\"15 Puzzle\",\r\n    //        description:\"Coming soon...\",\r\n    //        route:\"/\",\r\n    //        img:puzzle\r\n    //    }\r\n\r\n   ]\r\n}","import React, {Component} from 'react';\r\nimport Navbar from \"./navbar\";\r\nimport Greet from \"./greet\";\r\nimport TypeWriterC from \"./typewriter\";\r\nimport Cards from \"./cards\";\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar/>            \r\n                <Cards/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport './cell.css';\r\nclass Cell extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.getClass()}>\r\n                <span >\r\n                    {this.props.cell.val}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n    getClass = () =>{\r\n        const { val, isVisiting,isChecking,isPrime} = this.props.cell;\r\n        if(isPrime){\r\n            return \"cell cell-prime m-2\";\r\n        }else if( isVisiting ){\r\n            return \"cell cell-visiting m-2\";\r\n        } else if( isChecking ){\r\n            return \"cell cell-check m-2\";\r\n        } else{\r\n            return \"cell m-2\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cell;","import React, {Component} from 'react';\r\nimport Cell from \"./cell\";\r\nimport './cells.css'\r\nclass Cells extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Cells\">\r\n                {this.props.cells.map( (cell,cellidx)=>{\r\n                    return (\r\n                        <Cell\r\n                            key={cellidx}\r\n                            cell={cell}\r\n                        />\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cells;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Sieve</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n                marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.isDisabled}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('1');\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n        //props.onAlgoChanged(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ml-2 mr-2\">\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={1} style={{selected:true}} >Seive</MenuItem>\r\n                    <MenuItem value={2}>Brute Force(NA)</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\r\n                <SimpleSelect/>\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeSpeed}\r\n                    title=\"speed\"\r\n                    marks={false}\r\n                    default={10}\r\n                    step={1}\r\n                    min={10}\r\n                    max={50}\r\n                    isDisabled={false}\r\n                />\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeValues}\r\n                    title=\"Total Number\"\r\n                    marks={false}\r\n                    default={100}\r\n                    step={1}\r\n                    min={10}\r\n                    max={500}\r\n                    isDisabled={this.props.isDisabled}\r\n                />\r\n                <button className=\"btn btn-warning btn-lg m-2\" onClick={this.props.onVisualize} disabled={this.props.isDisabled} style={this.isClickable()}>Visualize</button>\r\n\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.isDisabled ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Cells from \"./cells\";\r\nimport Navbar from \"./navbar\";\r\nimport DiscreteSlider from \"./slider\";\r\nimport Menu from \"./menu\";\r\n\r\nclass Seive extends Component {\r\n    state = {\r\n        number: 100,\r\n        cells:[],\r\n        isRunning:false,\r\n        speed:500\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        const cells = getCells(this.state.number);\r\n        this.setState({cells});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    onChangeSpeed={this.changeSpeed}\r\n                    onChangeValues={this.handleValueIncease}\r\n                    onVisualize = {this.startSeive}\r\n                    onRefresh = {this.handleRefresh}\r\n                    isDisabled = {this.state.isRunning}\r\n                />\r\n                <Cells\r\n                    num={this.state.number}\r\n                    cells={this.state.cells}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    changeSpeed = (speed) => {\r\n        //console.log(typeof speed);\r\n        this.setState({speed:600-speed*10});\r\n    }\r\n    handleValueIncease = (value) => {\r\n        this.setState({number:value});\r\n        this.setState({cells:getCells(value),isRunning:false});\r\n        console.log(value);\r\n    }\r\n    handleRefresh = () => {\r\n        this.setState({cells:getCells(this.state.number),isRunning:false});\r\n    }\r\n    startSeive = async () => {\r\n        const speed = this.state.speed;\r\n        this.setState({isRunning:true});\r\n        const prime = [];\r\n        for(let i = 0;i<=this.state.number;i++){\r\n            prime.push(1);\r\n        }\r\n        prime[0] = prime[1] = 0;\r\n        let changedCells = this.state.cells;\r\n        let prevCheck = -1;\r\n        let counter = 0;\r\n        for( let i = 2; i<=this.state.number;i++){\r\n            if( prime[i] === 1 ){\r\n             //   setTimeout(()=>{\r\n                    changedCells = getNewCellPrimeToggled(changedCells,i-1);\r\n                    this.setState({cells:changedCells});\r\n                //},counter*speed);\r\n                await sleep(this.state.speed);\r\n                counter++;\r\n                for(let j = i*i;j<=this.state.number;j+=i){\r\n                    //setTimeout(()=>{\r\n                        if( prevCheck!=-1 ){\r\n                            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\r\n                        }\r\n                        prevCheck = j-1;\r\n                        changedCells = getNewCellCheckToggled(changedCells,j-1);\r\n                        changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\r\n                        this.setState({cells:changedCells});\r\n                  //  },counter*speed);\r\n                    await sleep(this.state.speed);\r\n                    counter++;\r\n                    prime[j] = 0;\r\n                }\r\n            }\r\n        }\r\n      //  setTimeout(()=>{\r\n            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\r\n            this.setState({cells:changedCells,isRunning:false});\r\n       // },counter*speed);\r\n    }\r\n}\r\n\r\nconst getNewCellPrimeToggled = (cells,pos) =>{\r\n    const newCells = cells.slice();\r\n    const cell = newCells[pos];\r\n    const newCell = {\r\n        ...cell,\r\n        isPrime:true\r\n    }\r\n    newCells[pos] = newCell;\r\n    return newCells;\r\n}\r\n\r\nconst getNewCellVisitingToggled = (cells,pos)=>{\r\n    const newCells = cells.slice();\r\n    const cell = newCells[pos];\r\n    const newCell = {\r\n        ...cell,\r\n        isVisiting:!cell.isVisiting\r\n    }\r\n    newCells[pos] = newCell;\r\n    return newCells;\r\n}\r\n\r\nconst getNewCellCheckToggled = (cells,pos) =>{\r\n    const newCells = cells.slice();\r\n    const cell = newCells[pos];\r\n    const newCell = {\r\n        ...cell,\r\n        isChecking:true\r\n    }\r\n    newCells[pos] = newCell;\r\n    return newCells;\r\n}\r\n\r\nconst getCells = (rows)=>{\r\n    const cells = [];\r\n    for(let cell = 1;cell<=rows;cell++){\r\n        cells.push(createCell(cell))\r\n    }\r\n    return cells;\r\n}\r\nconst createCell = (val)=>{\r\n    return {\r\n        val,\r\n        isChecking:false,\r\n        isVisiting:false,\r\n        isPrime:false\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nexport default Seive;","import React, {Component} from 'react';\r\nimport './style.css';\r\nclass Rect extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='rect'\r\n                style={{height:this.props.rect.width,\r\n                    background:this.checkColor(),\r\n                    margin:this.props.marg\r\n                }}\r\n            >\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    checkColor = () => {\r\n        if( this.props.rect.isSorted ){\r\n            return \"green\";\r\n        } else if( this.props.rect.isSorting ){\r\n            return \"red\";\r\n        } else{\r\n            return \"black\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rect;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\n\r\nclass Rects extends Component {\r\n    render() {\r\n        let margin = 5;\r\n        if( this.props.rects.length>50 ){\r\n            margin=1;\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-end\">\r\n                {this.props.rects.map( (rect,rectidx)=>{\r\n                    return (\r\n                        <Rect\r\n                            marg={margin}\r\n                            key={rectidx}\r\n                            rect={rect}\r\n                        />\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rects;","export function bubbleSort2(rects ){\r\n    const pairs = [];\r\n    const num  = rects.length;\r\n    const prevRect = rects.slice();\r\n\r\n    for( let i = 0; i<num; i++ ){\r\n        for( let j = i+1;j<num;j++ ){\r\n            if( prevRect[i].width>prevRect[j].width ){\r\n                const recti = {...prevRect[i]};\r\n                const rectj = {...prevRect[j]};\r\n                prevRect[j] = recti;\r\n                prevRect[i] = rectj;\r\n                pairs.push( {\r\n                    xx:i,\r\n                    yy:j,\r\n                    changed:true\r\n                } );\r\n            } else{\r\n                pairs.push( {\r\n                    xx:i,\r\n                    yy:j,\r\n                    changed:false\r\n                });\r\n            }\r\n            if( j === num-1 ){\r\n                pairs.push( {\r\n                    xx:i,\r\n                    yy:i,\r\n                    changed:false\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return pairs;\r\n}\r\n\r\nexport function selectionSort(arr) {\r\n    const pairs = [];\r\n    let n = arr.length;\r\n    const prevRect = arr.slice();\r\n    // One by one move boundary of unsorted subarray\r\n    for (let i = 0; i < n-1; i++)\r\n    {\r\n        let min_idx = i;\r\n        for (let j = i+1; j < n; j++){\r\n            pairs.push( {\r\n                xx:min_idx,\r\n                yy:j,\r\n                changed:false\r\n            } );\r\n            if (prevRect[j].width < prevRect[min_idx].width){\r\n                min_idx = j;\r\n            }\r\n        }\r\n\r\n        // Swap the found minimum element with the first\r\n        // element\r\n        const recti = {...prevRect[i]};\r\n        const rectj = {...prevRect[min_idx]};\r\n        prevRect[min_idx] = recti;\r\n        prevRect[i] = rectj;\r\n        pairs.push( {\r\n            xx:min_idx,\r\n            yy:i,\r\n            changed:true\r\n        } );\r\n        pairs.push( {\r\n            xx:i,\r\n            yy:i,\r\n            changed:false\r\n        });\r\n    }\r\n    pairs.push({\r\n            xx:n-1,\r\n            yy:n-1,\r\n            changed:false\r\n        }\r\n    )\r\n    return pairs;\r\n}\r\n\r\nexport function bubbleSort(arr){\r\n    const pairs= [];\r\n    let n = arr.length;\r\n    const prevRect = arr.slice();\r\n    for (let i = 0; i < n-1; i++){\r\n        for (let j = 0; j < n-i-1; j++){\r\n            if (prevRect[j].width > prevRect[j+1].width) {\r\n                // swap arr[j+1] and arr[j]\r\n                const recti = {...prevRect[j]};\r\n                const rectj = {...prevRect[j+1]};\r\n                prevRect[j+1] = recti;\r\n                prevRect[j] = rectj;\r\n                pairs.push( {\r\n                    xx:j,\r\n                    yy:j+1,\r\n                    changed:true\r\n                } );\r\n            } else{\r\n                pairs.push( {\r\n                    xx:j,\r\n                    yy:j+1,\r\n                    changed:false\r\n                } );\r\n            }\r\n            if( j === n-i-2 ){\r\n                pairs.push( {\r\n                    xx:n-i-1,\r\n                    yy:n-i-1,\r\n                    changed:false\r\n                } );\r\n            }\r\n        }\r\n    }\r\n    pairs.push({\r\n            xx:0,\r\n            yy:0,\r\n            changed:false\r\n        }\r\n    )\r\n    return pairs;\r\n}\r\n\r\nexport function insertionSort(arr){\r\n    const pairs = [];\r\n    let n = arr.length;\r\n    const prevRect = arr.slice();\r\n    for (let i = 1; i < n; ++i) {\r\n        let key = prevRect[i].width;\r\n        let j = i - 1;\r\n\r\n        while (j >= 0 && prevRect[j].width > key) {\r\n            const recti = {...prevRect[j]};\r\n            const rectj = {...prevRect[j+1]};\r\n            prevRect[j+1] = recti;\r\n            prevRect[j] = rectj;\r\n            pairs.push( {\r\n                xx:j,\r\n                yy:j+1,\r\n                changed:true\r\n            } );\r\n            j = j - 1;\r\n        }\r\n       // arr[j + 1] = arr[i];\r\n    }\r\n    for(let i=0;i<n;i++){\r\n        pairs.push({\r\n            xx:i,\r\n            yy:i,\r\n            changed:true\r\n        })\r\n    }\r\n    return pairs;\r\n}","let values = [];\r\n\r\nexport function quickSort(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n    // console.log( \"fdsfsd\",sz );\r\n    sz = sz-1;\r\n    quick(rects,0,sz);\r\n    for(var i=0;i<=sz;i++){\r\n        values.push({\r\n            xx:i,\r\n            yy:i,\r\n            changed:true\r\n        })\r\n    }\r\n    return values;\r\n}\r\n\r\n\r\nfunction getPartition(rects, left, right){\r\n    let pivot = rects[right].width\r\n    let it = left-1;\r\n    for(var j=left;j<=right-1;j++){\r\n        if( rects[j].width< pivot){\r\n            it++;\r\n            if( it!==j ){\r\n                // swap(rects[it],rects[j];\r\n                const rect1 = {...rects[it]};\r\n                const rect2 = {...rects[j]};\r\n                rects[it] = rect2;\r\n                rects[j] = rect1;\r\n                values.push({\r\n                    xx:it,\r\n                    yy:j,\r\n                    changed:true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    if( it+1!==right ){\r\n        const rect1 = {...rects[it+1]};\r\n        const rect2 = {...rects[right]};\r\n        rects[it+1] = rect2;\r\n        rects[right] = rect1;\r\n        values.push({\r\n            xx:it+1,\r\n            yy:right,\r\n            changed:true\r\n        })\r\n    }\r\n    return it+1;\r\n}\r\nfunction quick(rects,left,right){\r\n    if( left>=right ) return ;\r\n    const partition = getPartition(rects,left,right);\r\n    quick(rects,left,partition-1);\r\n    quick(rects,partition+1,right);\r\n}","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Sorting Visualizer</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                            <span style={{color:\"white\"}}>\r\n                                Home\r\n                            </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n    const [state, setState] = React.useState({\r\n        pos: props.pos,\r\n    });\r\n    const handleChange = (event) => {\r\n        console.log(state.pos);\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(state.pos,event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ml-2 mr-2\">\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={0} style={{selected:true}} >Bubble Sort</MenuItem>\r\n                    <MenuItem value={1}>Selection Sort</MenuItem>\r\n                    <MenuItem value={2}>Insertion Sort</MenuItem>\r\n                    <MenuItem value={3}>Quick Sort</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nconst AirbnbSlider = withStyles({\r\n    root: {\r\n        color: '#3a8589',\r\n        height: 3,\r\n        padding: '13px 0',\r\n    },\r\n    thumb: {\r\n        height: 27,\r\n        width: 27,\r\n        backgroundColor: '#fff',\r\n        border: '1px solid currentColor',\r\n        marginTop: -12,\r\n        marginLeft: -13,\r\n        boxShadow: '#ebebeb 0 2px 2px',\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: '#ccc 0 2px 3px 1px',\r\n        },\r\n        '& .bar': {\r\n            // display: inline-block !important;\r\n            height: 9,\r\n            width: 1,\r\n            backgroundColor: 'currentColor',\r\n            marginLeft: 1,\r\n            marginRight: 1,\r\n        },\r\n    },\r\n    active: {},\r\n    track: {\r\n        height: 3,\r\n    },\r\n    rail: {\r\n        color: '#ffffff',\r\n        opacity: 1,\r\n        height: 3,\r\n    },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n    return (\r\n        <span {...props}>\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n    </span>\r\n    );\r\n}\r\n\r\nexport default function CustomizedSlider() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography gutterBottom>Airbnb</Typography>\r\n            <AirbnbSlider\r\n                ThumbComponent={AirbnbThumbComponent}\r\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\r\n                defaultValue={[20, 40]}\r\n                valueLabelDisplay=\"on\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CSlider\r\n                disabled={props.disable}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"off\"\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Value range\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default function SwitchLabels(props) {\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.onDoubleChange(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <FormGroup row>\r\n            <FormControlLabel\r\n                control={<Switch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n                label=\"Duo\"\r\n                disabled={props.disable}\r\n            />\r\n\r\n        </FormGroup>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport CustomizedSlider from \"./airBnbSlider\";\r\nimport RangeSlider from \"./doubleSlider\";\r\nimport SwitchLabels from \"./formControlLabel\";\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-secondary m-2'\r\n                    onClick={this.props.onRandomize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Randomize\r\n                </button>\r\n\r\n                <RangeSlider\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={20}\r\n                    min={10}\r\n                    max={100}\r\n                    step={10}\r\n                    title=\"Numbers\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={10}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                    disable={false}\r\n                />\r\n                <SimpleSelect\r\n                    pos={0}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <SwitchLabels\r\n                    disable={this.props.disable}\r\n                    onDoubleChange={this.props.onDoubleChange}\r\n                />\r\n                <SimpleSelect\r\n                    pos={1}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <button\r\n                    className='btn btn-warning btn-lg '\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport Rects from \"./rects\";\r\nimport {bubbleSort,selectionSort,insertionSort} from \"../algorithms/sortingAlgorithms\";\r\nimport {quickSort} from \"../algorithms/quickSort\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\n\r\nclass Sort extends Component {\r\n  state = {\r\n      count:20,\r\n      rects: [],\r\n      rects2: [],\r\n      doubles:false,\r\n      speed:50,\r\n      isRunning:false,\r\n      isRunning1:false,\r\n      isRunning2:false,\r\n      algo1:0,\r\n      algo2:0\r\n  }\r\n  constructor() {\r\n      super();\r\n  }\r\n  componentDidMount() {\r\n      const rect = getInitialRects(this.state.count);\r\n      const rect2 = rect.slice();\r\n      this.setState({rects:rect,rects2:rect2});\r\n  }\r\n\r\n    render() {\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar/>\r\n            <Menu\r\n                disable={this.state.isRunning}\r\n                onDoubleChange={this.handleDouble}\r\n                onViusalize={this.handleSort}\r\n                onRandomize={this.handleRandomize}\r\n                onRefresh={this.handleRefresh}\r\n                onCountChange={this.handleCountChange}\r\n                onAlgoChanged={this.handleAlgoChanged}\r\n                onSpeedChange={this.handleSpeedChanged}\r\n            />\r\n            <div className=' justify-content-center'>\r\n\r\n                <Rects\r\n                    rects={this.state.rects}\r\n                />\r\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\r\n                { this.state.doubles &&\r\n                <Rects\r\n                    rects={this.state.rects2}\r\n                /> }\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n  handleRandomize = () => {\r\n      const rect = getInitialRects(this.state.count);\r\n      const rect2 = rect.slice();\r\n      this.setState({rects:rect,rects2:rect2});\r\n  }\r\n  handleRefresh = () =>{\r\n      const rects = this.state.rects;\r\n      for(let i=0;i<rects.length;i++){\r\n          const rect = {...rects[i],isSorted:false, isSorting:false}\r\n          rects[i] = rect;\r\n      }\r\n      const rects2 = rects.slice();\r\n      this.setState({rects,rects2});\r\n  }\r\n\r\n  handleDouble = (val) =>{\r\n      this.setState({doubles:val});\r\n  }\r\n  handleCountChange = (val) => {\r\n      this.setState({count:val});\r\n      this.handleRandomize();\r\n  }\r\n  handleAlgoChanged = (pos,val) =>{\r\n      if( pos === 0 ){\r\n          this.setState({algo1:val});\r\n      } else{\r\n          this.setState({algo2:val});\r\n      }\r\n  }\r\n  handleSpeedChanged = (val) =>{\r\n    const speed = (110-val);\r\n    this.setState({speed});\r\n  }\r\n  handleSort = () =>{\r\n\r\n      this.setState({isRunning:true});\r\n      let steps1;\r\n      switch (this.state.algo1){\r\n          case 0:\r\n              steps1 = bubbleSort(this.state.rects);\r\n              break;\r\n          case 1:\r\n              steps1 = selectionSort(this.state.rects);\r\n              break;\r\n          case 2:\r\n              steps1 = insertionSort(this.state.rects);\r\n              break;\r\n          case 3:\r\n              steps1 = quickSort(this.state.rects2);\r\n              console.log(steps1)\r\n              break;\r\n          default:\r\n              steps1 = bubbleSort(this.state.rects);\r\n              break;\r\n      }\r\n      let steps2;\r\n      if( this.state.doubles ){\r\n\r\n          switch (this.state.algo2){\r\n              case 0:\r\n                  steps2 = bubbleSort(this.state.rects2);\r\n                  break;\r\n              case 1:\r\n                  steps2 = selectionSort(this.state.rects2);\r\n                  break;\r\n              case 2:\r\n                  steps2 = insertionSort(this.state.rects2);\r\n                  break;\r\n              case 3:\r\n                  steps2 = quickSort(this.state.rects2);\r\n                  break;\r\n              default:\r\n                  steps2 = bubbleSort(this.state.rects2);\r\n                  break;\r\n          }\r\n\r\n      }\r\n      this.handleFirst(steps1);\r\n      if( this.state.doubles ) this.handleSecond(steps2);\r\n  }\r\n  handleFirst = async (steps) =>{\r\n     // console.log(\"fsdfsdfsdfasdf\");\r\n      this.setState({isRunning1:true});\r\n      const {speed} = this.state;\r\n     // const steps = bubbleSort(this.state.rects);\r\n    //  console.log(steps.length);\r\n      const prevRect = this.state.rects;\r\n      for(let i = 0;i<steps.length;i++){\r\n       //   setTimeout(()=>{\r\n              if( i!==0 ){\r\n                  prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\r\n                  prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\r\n              }\r\n              if(steps[i].xx===steps[i].yy){\r\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\r\n              }else if( steps[i].changed ){\r\n                  const recti = {...prevRect[steps[i].xx],isSorting:true};\r\n                  const rectj = {...prevRect[steps[i].yy],isSorting:true};\r\n                  prevRect[steps[i].yy] = recti;\r\n                  prevRect[steps[i].xx] = rectj;\r\n              } else{\r\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\r\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\r\n              }\r\n              if(i === steps.length-1){\r\n                  this.setState({isRunning1:false});\r\n                  if( this.state.isRunning2 === false ){\r\n                      this.setState({isRunning:false});\r\n                  }\r\n              }\r\n             /* if( i === (steps.length)-2 ){\r\n                  this.setState({isRunning1:false});\r\n                  if( this.state.isRunning2 === false ){\r\n                      this.setState({isRunning:false});\r\n                  }\r\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\r\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\r\n              }*/\r\n              this.setState({rects:prevRect});\r\n              await sleep(this.state.speed);\r\n         // },i*speed);\r\n      }\r\n  }\r\n    handleSecond = async (steps) =>{\r\n        const {speed} = this.state;\r\n        this.setState({isRunning2:true});\r\n        const prevRect = this.state.rects2;\r\n        for(let i = 0;i<steps.length;i++){\r\n         //   setTimeout(()=>{\r\n                if( i!==0 ){\r\n                    prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\r\n                    prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\r\n                }\r\n                if(steps[i].xx===steps[i].yy){\r\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\r\n                }else if( steps[i].changed ){\r\n                    const recti = {...prevRect[steps[i].xx],isSorting:true};\r\n                    const rectj = {...prevRect[steps[i].yy],isSorting:true};\r\n                    prevRect[steps[i].yy] = recti;\r\n                    prevRect[steps[i].xx] = rectj;\r\n                } else{\r\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\r\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\r\n                }\r\n                if( i === steps.length-1 ){\r\n                    this.setState({isRunning2:false});\r\n                    if( this.state.isRunning1 === false ){\r\n                        this.setState({isRunning:false});\r\n                    }\r\n                }\r\n               /* if( i === (steps.length)-2 ){\r\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\r\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\r\n                    this.setState({isRunning2:false});\r\n                    if( this.state.isRunning1 === false ){\r\n                        this.setState({isRunning:false});\r\n                    }\r\n                }*/\r\n                this.setState({rects2:prevRect});\r\n                await sleep(this.state.speed);\r\n           // },i*speed);\r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nconst getInitialRects = (tot) => {\r\n    const rects = [];\r\n    for(let i = 0;i<tot;i++){\r\n        rects.push(getRect());\r\n    }\r\n    return rects;\r\n}\r\nconst getRect = () => {\r\n  return {\r\n      width: Math.floor(Math.random() * 200)+50,\r\n      isSorted:false,\r\n      isSorting:false\r\n  }\r\n}\r\nexport default Sort;\r\n","export default __webpack_public_path__ + \"static/media/queen.a967028b.png\";","import React, {Component} from 'react';\r\nimport './style.css'\r\nimport queen from './queen.png';\r\nclass Cell extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.getClassName()} style={this.getStyled()}>\r\n                { this.props.cell.isPresent && <img src={queen} height='100px' style={{padding:\"25px\"}}/> }\r\n            </div>\r\n        );\r\n    }\r\n    getClassName = ()=>{\r\n        if(this.props.cell.isAttacked){\r\n            return \"boardCell attacked\";\r\n        } else if(this.props.cell.isCurrent){\r\n            return \"boardCell current\";\r\n        }else if(this.props.cell.isPresent){\r\n            return \"boardCell present\";\r\n        }else if(this.props.cell.isChecked){\r\n            return \"boardCell checked\";\r\n        } else{\r\n            return \"boardCell\";\r\n        }\r\n    }\r\n    getStyled = () =>{\r\n        if( (this.props.cell.row+this.props.cell.col)%2 === 0 ){\r\n            return {\r\n                backgroundColor:\"white\"\r\n            }\r\n        }else{\r\n            return {\r\n                backgroundColor:\"grey\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cell;","import React, {Component} from 'react';\r\nimport Cell from \"./cell\";\r\nimport './style.css';\r\nclass Cells extends Component {\r\n    render() {\r\n        return (\r\n            <div className='booard m-5' >\r\n                {this.props.board.map( (row,rowidx)=>{\r\n                    return(\r\n                        <div key={rowidx}>\r\n                            {row.map( (cell,cellidx)=>{\r\n                                return(\r\n                                    <Cell\r\n                                        key={cellidx}\r\n                                        cell={cell}/>\r\n                                );\r\n                            } )}\r\n                        </div>\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cells;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">N Queen</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                            <span style={{color:\"white\"}}>\r\n                                Home\r\n                            </span>\r\n                    </Link>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\n\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-secondary m-2'\r\n                    onClick={this.props.onClear}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Clear Board\r\n                </button>\r\n\r\n                <DiscreteSlider\r\n                    default={4}\r\n                    min={1}\r\n                    max={8}\r\n                    step={1}\r\n                    title=\"Grid size\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={1}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                />\r\n\r\n                <button\r\n                    className='btn btn-warning btn-lg '\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Cells from \"./cells\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\n\r\nclass Queen extends Component {\r\n    state={\r\n        board:[],\r\n        number:4,\r\n        speed:490,\r\n        isRunning:false\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        const board = getBoard(this.state.number);\r\n       // board[3][3].isPresent = true;\r\n        this.setState({board});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    onSpeedChange={this.handleSpeedChange}\r\n                    onCountChange={this.handleQueenChange}\r\n                    onViusalize={this.startAlgo}\r\n                    disable={this.state.isRunning}\r\n                    onClear={this.handleClear}\r\n                    onStop={this.handleStop}\r\n                />\r\n                <div style={{textAlign:\"Center\"}}>\r\n                    <Cells\r\n                        board={this.state.board}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleStop =() =>{\r\n        this.setState({isRunning:false});\r\n    }\r\n\r\n    handleSpeedChange = (val)=>{\r\n        const speed = (100-val)*10;\r\n        this.setState({speed});\r\n    }\r\n    handleQueenChange = (number)=>{\r\n        this.setState({number});\r\n        const board = getBoard(this.state.number);\r\n        this.setState({board});\r\n    }\r\n    handleClear = () => {\r\n        const board = getBoard(this.state.number);\r\n        this.setState({board});\r\n    }\r\n    handleTurnOff =  () => {\r\n        const newBoard = turnOffAttack(this.state.board,this.state.number);\r\n        this.setState({board:newBoard});\r\n    }\r\n    startAlgo = async ()=>{\r\n        this.setState({isRunning:true});\r\n        const newBoard = this.state.board.slice();\r\n        await this.queensAlgo(newBoard,0);\r\n        const newBoard2 = turnOffAttack(this.state.board,this.state.number);\r\n        this.setState({board:newBoard2,isRunning:false});\r\n    }\r\n    queensAlgo =  async (board,col) => {\r\n\r\n        if( col>=this.state.number ){\r\n            return true;\r\n        }\r\n\r\n        let newBoard = board.slice();\r\n        for( let i = 0; i < this.state.number;i++ ){\r\n\r\n\r\n            newBoard = turnOffAttack(newBoard,this.state.number);\r\n            const result = getChecked(newBoard,i,col,this.state.number);\r\n            newBoard = result[0];\r\n\r\n            this.setState({board:newBoard});\r\n            await sleep(this.state.speed);\r\n            if( result[1] ){\r\n                const res = await this.queensAlgo(newBoard,col+1)\r\n                if( res === true){\r\n                    return true;\r\n                }\r\n                newBoard[i][col] = {...newBoard[i][col],isPresent:true,isCurrent:true};\r\n                this.setState({board:newBoard});\r\n                await sleep(this.state.speed);\r\n                newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\r\n                this.setState({board:newBoard});\r\n\r\n            }\r\n            newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\r\n            newBoard = turnOffAttack(newBoard,this.state.number);\r\n            this.setState({board:newBoard});\r\n            await sleep(this.state.speed);\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport default Queen;\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nconst turnOffAttack = (board,N) =>{\r\n    const newBoard = board.slice();\r\n    for( let i = 0;i<N; i++ ){\r\n        for( let j = 0;j<N;j++ ){\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:false, isAttacked:false,isCurrent:false};\r\n        }\r\n    }\r\n    return newBoard;\r\n}\r\n\r\nconst getChecked = (board,row,col,N) =>{\r\n    const newBoard = board.slice();\r\n    let pos = true;\r\n    // same col\r\n    for( let i = 0;i < N;i++ ){\r\n        if( newBoard[row][i].isPresent ){\r\n            newBoard[row][i] = {...newBoard[row][i],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[row][i] = {...newBoard[row][i],isChecked:true};\r\n        }\r\n    }\r\n    // same row\r\n    for( let i = 0;i < N;i++ ){\r\n        if( newBoard[i][col].isPresent ){\r\n            newBoard[i][col] = {...newBoard[i][col],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][col] = {...newBoard[i][col],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i >= 0 && j >= 0; i--, j--){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i <N && j >= 0; i++, j--){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i <N && j < N; i++, j++){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i>=0 && j < N; i--, j++){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n\r\n    newBoard[row][col] = {...newBoard[row][col],isPresent:true,isCurrent:true};\r\n\r\n    return [newBoard,pos];\r\n}\r\nconst getBoard = (N) =>{\r\n    const rows = [];\r\n    for( let i = 0;i<N;i++ ){\r\n        const cols = [];\r\n        for(let j =0;j<N;j++){\r\n            cols.push(getCell(i,j));\r\n        }\r\n        rows.push(cols);\r\n    }\r\n    return rows;\r\n}\r\n\r\nconst getCell = (row,col)=>{\r\n    return{\r\n        row,\r\n        col,\r\n        isPresent:false,\r\n        isChecked:false,\r\n        isAttacked:false,\r\n        isCurrent:false\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nclass MyTimer extends Component {\r\n    state={\r\n        time:0,\r\n        going:false,\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if( prevProps.onGoing!==this.props.onGoing ){\r\n            this.setState({going:this.props.onGoing});\r\n            if( this.props.onGoing ){\r\n                this.startCount();\r\n            }\r\n        }\r\n    }\r\n    startCount = async () => {\r\n        while (this.props.onGoing){\r\n            this.setState({time:this.state.time+1});\r\n            if( this.state.time>10){\r\n                this.setState({time:0});\r\n                this.props.onStop();\r\n            }\r\n            await sleep(100);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>\r\n                    <span className='badge badge-danger'>\r\n                    {this.state.time}\r\n                </span>\r\n                </h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default MyTimer;","export function convex_hull(points){\r\n    if( points.size === 1 ){\r\n        return;\r\n    }\r\n    const pointStart = points[0];\r\n    const pointEnd = points[ points.length-1 ];\r\n    const up = [], down = [];\r\n    const pairs = [];\r\n    const lines=[];\r\n    up.push( pointStart);\r\n    down.push(pointStart);\r\n    for( let i = 1; i< points.length ;i++ ){\r\n        if( (i === (points.length - 1)) || cw( pointStart,points[i],pointEnd ) ){\r\n            while( up.length >=2 && !cw(up[up.length-2],up[up.length-1],points[i] ) ){\r\n                lines.push({\r\n                    from:up[up.length-2],\r\n                    to:up[up.length-1],\r\n                    add:false\r\n                });\r\n                up.pop();\r\n            }\r\n            up.push( points[i] );\r\n            lines.push({\r\n                from:up[up.length-2],\r\n                to:up[up.length-1],\r\n                add:true\r\n            })\r\n        }\r\n\r\n    }\r\n    for(let i = 0; i< points.length;i++){\r\n        if( (i === (points.length - 1)) || ccw( pointStart,points[i],pointEnd ) ){\r\n            while( down.length >=2 && !ccw(down[down.length-2],down[down.length-1],points[i] ) ){\r\n                lines.push({\r\n                    from:down[down.length-2],\r\n                    to:down[down.length-1],\r\n                    add:false\r\n                });\r\n                down.pop();\r\n            }\r\n            down.push( points[i] );\r\n            lines.push({\r\n                from:down[down.length-2],\r\n                to:down[down.length-1],\r\n                add:true\r\n            })\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < up.length; i++){\r\n        pairs.push(up[i]);\r\n    }\r\n    for (let i = down.length - 2; i > 0; i--) {\r\n        pairs.push(down[i]);\r\n    }\r\n    return [pairs,lines];\r\n}\r\n\r\nfunction cw(a, b, c) {\r\n    const f = a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy);\r\n    if( a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy) < 0 ){\r\n        return true;\r\n    } else{\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nfunction ccw(a, b, c){\r\n    if( a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0 ){\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport './style.css';\r\nimport {convex_hull} from \"../algorithms/grahamScan\";\r\nclass Canvas extends Component {\r\n    state={\r\n        dots:[],\r\n        lines:[],\r\n        canvasWidth:300,\r\n        canvasHeight:100\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.setState({canvasWidth:window.innerWidth});\r\n        this.setState({canvasHeight:window.innerHeight-10});\r\n        console.log(window.innerWidth);\r\n        this.myRef = React.createRef();\r\n        this.canvasLineRef = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        this.redrawDots();\r\n       // console.log(this.state.canvasWidth);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if( this.props.dots!==prevProps.dots ){\r\n            this.setState({dots:this.props.dots});\r\n            this.redrawDots();\r\n        }\r\n        if( this.props.onGoing!==prevProps.onGoing ){\r\n            if( this.props.onGoing === true ){\r\n                this.animateLine();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign:\"center\"}}>\r\n                <div className=\"containerz\">\r\n                    <canvas\r\n                        className='canvas'\r\n                        id='canvas1'\r\n                        style={{backgroundColor:\"whitesmoke\"}}\r\n                        ref={this.canvasLineRef} width={window.innerWidth} height={window.innerHeight-200} />\r\n                    <canvas\r\n                        className='canvas'\r\n                        id='canvas2'\r\n                        // style={{backgroundColor:\"grey\"}}\r\n                        ref={this.myRef} width={window.innerWidth} height={window.innerHeight-200}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    redrawDots(){\r\n        const canvas = this.myRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.fillStyle = 'lightgrey';\r\n        ctx.strokeStyle = 'black';\r\n        for( let i = 0; i<this.props.dots.length;i++ ){\r\n            ctx.beginPath();\r\n           // ctx.moveTo(this.props.dots[i].xx, this.props.dots[i].yy)\r\n            ctx.arc(this.props.dots[i].xx, this.props.dots[i].yy, 10, 0, 2*Math.PI);\r\n            ctx.fill();\r\n            ctx.lineWidth = 2;\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n        }\r\n        ctx.closePath();\r\n        const res = convex_hull(this.props.dots);\r\n\r\n        const cansvas2 = this.canvasLineRef.current;\r\n        const ctx2 = cansvas2.getContext('2d');\r\n        ctx2.clearRect(0, 0, canvas.width, canvas.height);\r\n        this.setState({lines:res[1]});\r\n\r\n    }\r\n\r\n    animateLine = async () => {\r\n        const {lines} = this.state;\r\n        const canvas2 = this.canvasLineRef.current;\r\n        const ctx2 = canvas2.getContext('2d');\r\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n        ctx2.fillStyle = '#ffffff';\r\n        ctx2.strokeStyle = '#ffffff';\r\n        for( let i = 0; i<lines.length;i++ ){\r\n            if( !this.props.onGoing ){\r\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n                return;\r\n            }\r\n            ctx2.beginPath();\r\n            if( lines[i].add ){\r\n                ctx2.beginPath();\r\n                ctx2.lineWidth = 2;\r\n                ctx2.fillStyle = 'black';\r\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\r\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 14, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'red';\r\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\r\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 14, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.lineWidth = 2;\r\n                ctx2.strokeStyle = '#000000';\r\n            } else{\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'whitesmoke';\r\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\r\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 15, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'whitesmoke';\r\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\r\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 15, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.lineWidth = 4;\r\n                ctx2.strokeStyle = 'whitesmoke';\r\n            }\r\n\r\n            ctx2.moveTo(lines[i].from.xx, lines[i].from.yy);\r\n            ctx2.lineTo(lines[i].to.xx, lines[i].to.yy);\r\n            ctx2.stroke();\r\n            ctx2.closePath();\r\n            if( i === lines.length - 1 ){\r\n                this.props.onTurnOff();\r\n            }\r\n            await sleep(this.props.speed);\r\n        }\r\n    }\r\n\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nexport default Canvas;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Convex Hull</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n                marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.isDisabled}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeSpeed}\r\n                    title=\"speed\"\r\n                    marks={false}\r\n                    default={10}\r\n                    step={1}\r\n                    min={10}\r\n                    max={50}\r\n                    isDisabled={false}\r\n                />\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeValues}\r\n                    title=\"Total Number\"\r\n                    marks={false}\r\n                    default={50}\r\n                    step={1}\r\n                    min={10}\r\n                    max={200}\r\n                    isDisabled={this.props.isDisabled}\r\n                />\r\n                <button\r\n                    className=\"btn btn-warning btn-lg m-2\"\r\n                    onClick={this.props.onVisualize}\r\n                    disabled={this.props.isDisabled}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize Graham Scan\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.isDisabled ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport MyTimer from \"./timer\";\r\nimport Canvas from \"./canvas\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nclass ConvexHull extends Component {\r\n    state={\r\n        dots:[],\r\n        lines:[],\r\n        isALgoLive:false,\r\n        width:100,\r\n        height:100,\r\n        isRunning:false,\r\n        speed:100,\r\n        number:50\r\n\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.setState({width:window.innerWidth,height:window.innerHeight-200});\r\n    }\r\n    componentDidMount() {\r\n        this.setState({width:window.innerWidth,height:window.innerHeight-100});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    onRefresh={this.handleRefreshDots}\r\n                    onVisualize={this.handleVisualize}\r\n                    onChangeSpeed={this.changeSpeed}\r\n                    onChangeValues={this.handleValueIncease}\r\n                />\r\n                <Canvas\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    dots={this.state.dots}\r\n                    onTurnOff={this.handleTurnOff}\r\n                    onGoing={this.state.isRunning}\r\n                    speed={this.state.speed}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    handleValueIncease = (value) => {\r\n        this.setState({number:value});\r\n        this.handleRefreshDots();\r\n    }\r\n    changeSpeed = (speed) => {\r\n        //console.log(typeof speed);\r\n        this.setState({speed:600-speed*10});\r\n    }\r\n    handleAlgoStateChanged = (val) => {\r\n        this.setState({isAlgoLive:val});\r\n    }\r\n    handleVisualize = () =>{\r\n        this.setState({isRunning:true});\r\n    }\r\n    handleTurnOff = () =>{\r\n        this.setState({onGoing:false});\r\n    }\r\n    handleRefreshDots = () =>{\r\n        this.setState({isRunning:false});\r\n        this.setState({dots:getNewDots(this.state.number)});\r\n    }\r\n\r\n    handleMoreDot = () =>{\r\n        const row = Math.floor(Math.random()*400)+10;\r\n        const col = Math.floor(Math.random()*400)+10;\r\n        const dot = {\r\n            row:row,\r\n            col:col\r\n        }\r\n        const dots = this.state.dots;\r\n        dots.push(dot);\r\n        this.setState(dots);\r\n    }\r\n}\r\nfunction getNewDots(number){\r\n    const dots= [];\r\n    for(let  i = 0; i<number;i++){\r\n        dots.push(getDot());\r\n    }\r\n    dots.sort( (a,b) => {\r\n       if( a.xx!==b.xx ){\r\n           return a.xx-b.xx;\r\n       } else{\r\n           return a.yy - b.yy;\r\n       }\r\n    } );\r\n    return dots;\r\n}\r\nfunction getDot(){\r\n    const width = window.innerWidth-50;\r\n    const height = window.innerHeight-250;\r\n    const rowpos = Math.floor( Math.random()*height )+25;\r\n    const colpos = Math.floor(Math.random()*width)+25;\r\n    return {\r\n        xx:colpos,\r\n        yy:rowpos,\r\n    }\r\n}\r\nexport default ConvexHull;","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass EntryPoint extends Component {\r\n    state={\r\n        error:false\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    error={this.state.error}\r\n                    id=\"standard-error-helper-text\"\r\n                    label=\"Upper Number\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    onChange={this.getData}\r\n                /> <br /><br />\r\n                <h1>\r\n                    Guess a number between 0 and {this.props.upper}\r\n                </h1>\r\n                <br />\r\n                <button\r\n                    className='btn btn-warning btn-lg'\r\n                    onClick={this.props.startGame}\r\n                >\r\n                    Start the game\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n    getData = (e)=>{\r\n        if( e.target.value!== \"\" ){\r\n            console.log(e.target.value);\r\n            this.props.setUpper(e.target.value);\r\n        }\r\n        else{\r\n            this.props.setUpper(100)\r\n        }\r\n    }\r\n    validateNumbers = () =>{\r\n\r\n    }\r\n}\r\n\r\nexport default EntryPoint;","import React, {useEffect} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 400,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        width: 400,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([props.lower, props.upper]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n    useEffect(()=>{\r\n        setValue([props.lower,props.upper]);\r\n    },[props.lower,props.upper])\r\n    return (\r\n        <div className={classes.root}>\r\n            <CSlider\r\n                disabled\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"on\"\r\n                max={props.max}\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Binary Search\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport RangeSlider from \"./doubleSlider\";\r\n\r\nclass Guess extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n\r\n                <p>\r\n\r\n                    <button className=\"btn btn-secondary btn-lg\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                        Toggle Range\r\n                    </button>\r\n                </p>\r\n                <div className=\"collapse\" id=\"collapseExample\">\r\n                    <div className=\"card card-body\">\r\n                        <center style={{justifyContent:\"center\"}}>\r\n                            <RangeSlider\r\n                                upper={this.props.upper}\r\n                                lower={this.props.lower}\r\n                                max={this.props.max}\r\n                            />\r\n                        </center>\r\n                    </div>\r\n                </div>\r\n\r\n               <h1>\r\n                    Is you number greater than {this.getMid()}?\r\n                </h1> <br />\r\n                <button\r\n                    className='btn btn-lg btn-success m-2'\r\n                    onClick={this.props.yesButton}\r\n                >Yes</button>\r\n                <button\r\n                    className='btn btn-lg btn-danger m-2'\r\n                    onClick={this.props.noButton}\r\n                >No</button> <br/>\r\n            </div>\r\n        );\r\n    }\r\n    getMid = () => {\r\n        const mid = Math.floor( (this.props.upper+this.props.lower)/2);\r\n        return mid;\r\n    }\r\n}\r\n\r\nexport default Guess;","import React, {Component} from 'react';\r\n\r\nclass Result extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className='display-3'>\r\n                    Your number is {this.props.res}\r\n                </span> <br />\r\n                <button\r\n                    className='btn btn-warning btn-lg'\r\n                    onClick={this.props.onRestart}\r\n                >\r\n                    Restart\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Result;","import React, {Component} from 'react';\r\nimport Guess from \"./guess\";\r\nimport Result from \"./result\";\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.upper !== this.props.lower &&\r\n                <Guess\r\n                    yesButton={this.props.yesButton}\r\n                    noButton={this.props.noButton}\r\n                    upper={this.props.upper}\r\n                    lower={this.props.lower}\r\n                    max={this.props.max}\r\n                />\r\n                }\r\n                {this.props.upper === this.props.lower &&\r\n                   <Result\r\n                       res={this.props.upper}\r\n                       onRestart={this.props.onRestart}\r\n                   />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Binary Search Game</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport EntryPoint from \"./entryPoint\";\r\nimport Search from \"./search\";\r\nimport Navbar from \"./navbar\";\r\n\r\nclass BinarySearch extends Component {\r\n    state={\r\n        upper:100,\r\n        lower:0,\r\n        max:100,\r\n        isRunning:false\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <br />\r\n                <br />\r\n                <br />\r\n            <center>\r\n                {!this.state.isRunning &&\r\n                <EntryPoint\r\n                    startGame={this.handleStartGame}\r\n                    upper={this.state.upper}\r\n                    setUpper={this.handleSetUpper}\r\n                /> }\r\n                {this.state.isRunning &&\r\n                <Search\r\n                    yesButton={this.handleYes}\r\n                    noButton={this.handleNo}\r\n                    upper={this.state.upper}\r\n                    lower={this.state.lower}\r\n                    max={this.state.max}\r\n                    onRestart={this.handleRestart}\r\n                />\r\n                }\r\n            </center>\r\n            </div>\r\n        );\r\n    }\r\n    handleStartGame = () =>{\r\n        this.setState({isRunning:true});\r\n    }\r\n    handleRestart = () =>{\r\n        this.setState({isRunning:false,upper:100,lower:0});\r\n    }\r\n    handleYes = () =>{\r\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\r\n        this.setState({lower:mid+1});\r\n    }\r\n    handleNo = () =>{\r\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\r\n        this.setState({upper:mid});\r\n    }\r\n    handleSetUpper = (up) =>{\r\n        let val = parseInt(up);\r\n        if( val<=0 ){\r\n            val = 100;\r\n        }\r\n        this.setState({upper:val,max:val});\r\n    }\r\n}\r\n\r\nexport default BinarySearch;","import React, {Component} from 'react';\r\nimport './style.css';\r\nclass Rect extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='rect'\r\n                style={{height:this.props.rect.width,\r\n                    border: this.checkBorder(),\r\n                    background:this.checkColor(),\r\n                    margin:this.props.marg\r\n\r\n\r\n                }}\r\n            >\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    checkColor = () => {\r\n        if( this.props.rect.isSorted ){\r\n            return \"green\";\r\n        } else if( this.props.rect.isSorting ){\r\n            return \"orange\";\r\n        } else if( this.props.rect.isLeft ){\r\n            return \"red\";\r\n        } else if(this.props.rect.isRight){\r\n            return \"purple\";\r\n        }else{\r\n            return \"#ADD8E6\";\r\n        }\r\n    }\r\n    checkBorder = () =>{\r\n        if( this.props.rect.isRange ){\r\n            return \"0px solid black\";\r\n        } else{\r\n            return \"0px\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rect;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\n\r\nclass Rects extends Component {\r\n    render() {\r\n        let margin = 5;\r\n        if( this.props.rects.length>50 ){\r\n            margin=1;\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-end\">\r\n                {this.props.rects.map( (rect,rectidx)=>{\r\n                    return (\r\n                        <Rect\r\n                            marg={margin}\r\n                            key={rectidx}\r\n                            rect={rect}\r\n                        />\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rects;","let values = [];\r\nexport default function mergeSort(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n   // console.log( \"fdsfsd\",sz );\r\n    sz = sz-1;\r\n    mergeS(rects,0,sz);\r\n    return values;\r\n}\r\n\r\nfunction merge(rects, l, m, r){\r\n  //  console.log(l,\" \",r);\r\n    let n1 = m-l+1;\r\n    let n2 = r-m;\r\n\r\n    const L = rects.slice(l, m+1);\r\n    const R = rects.slice(m+1,r+1);\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = l;\r\n    while(i<n1 && j<n2){\r\n        if( L[i].width <= R[j].width ){\r\n            rects[k] = L[i];\r\n            i++;\r\n        } else{\r\n            rects[k] = R[j];\r\n            j++;\r\n        }\r\n        k++;\r\n    }\r\n    while (i < n1) {\r\n        rects[k] = L[i];\r\n        i++;\r\n        k++;\r\n    }\r\n    while (j < n2) {\r\n        rects[k] = R[j];\r\n        j++;\r\n        k++;\r\n    }\r\n\r\n}\r\n\r\nfunction mergeS(rects,l,r){\r\n\r\n    if( l>=r ) return;\r\n    let m = l+ (r-l)/2;\r\n    m = Math.floor(m);\r\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\r\n    mergeS(rects,l,m);\r\n    mergeS(rects,m+1,r);\r\n    merge(rects,l,m,r);\r\n    let rectsCopy = rects.slice(l,r+1);\r\n    let value = {\r\n        left:l,\r\n        right:r,\r\n        mid:m,\r\n        val:rectsCopy\r\n    }\r\n    values.push(value);\r\n}","let values = [];\r\nexport default function HeapSort(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n   // sz = sz-1;\r\n    heapSort(rects,sz);\r\n    return values;\r\n}\r\nfunction heapify(rects,n,i){\r\n    let largest = i; // Initialize largest as root\r\n    let l = 2 * i + 1; // left = 2*i + 1\r\n    let r = 2 * i + 2; // right = 2*i + 2\r\n\r\n    // If left child is larger than root\r\n    if (l < n && rects[l].width > rects[largest].width)\r\n        largest = l;\r\n\r\n    // If right child is larger than largest so far\r\n    if (r < n && rects[r].width > rects[largest].width)\r\n        largest = r;\r\n\r\n    // If largest is not root\r\n    if (largest != i) {\r\n        let temp = rects[i];\r\n        rects[i] = rects[largest];\r\n        rects[largest] = temp;\r\n        let value = {\r\n            left:i,\r\n            right:largest,\r\n            sorted: false\r\n        }\r\n        values.push(value);\r\n        // Recursively heapify the affected sub-tree\r\n        heapify(rects, n, largest);\r\n    }\r\n}\r\nfunction heapSort(rects,n){\r\n    for(let i = Math.floor(n/2)-1;i>=0;i--){\r\n      //  console.log(\"heap \",n,\" \",i);\r\n        heapify(rects,n,i);\r\n    }\r\n    for (let i = n-1 ; i > 0; i--) {\r\n        // Move current root to end\r\n        let temp = rects[i];\r\n        rects[i] = rects[0];\r\n        rects[0] = temp;\r\n        let value = {\r\n            left:i,\r\n            right:0,\r\n            sorted:true\r\n        }\r\n        values.push(value);\r\n        // call max heapify on the reduced heap\r\n        heapify(rects, i, 0);\r\n    }\r\n}\r\n","let values = [];\r\n\r\nexport function quickSortRecursive(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n    // console.log( \"fdsfsd\",sz );\r\n    sz = sz-1;\r\n    quick(rects,0,sz);\r\n    return values;\r\n}\r\n\r\n\r\nfunction getPartition(rects, left, right){\r\n    values.push({\r\n        left,\r\n        right,\r\n        swap:false,\r\n        changedRange:true,\r\n    })\r\n    let pivot = rects[right].width\r\n    let it = left-1;\r\n    for(var j=left;j<=right-1;j++){\r\n        if( rects[j].width< pivot){\r\n            it++;\r\n            if( it!==j ){\r\n                // swap(rects[it],rects[j];\r\n                const rect1 = {...rects[it]};\r\n                const rect2 = {...rects[j]};\r\n                rects[it] = rect2;\r\n                rects[j] = rect1;\r\n                values.push({\r\n                    left:it,\r\n                    right:j,\r\n                    swap:true,\r\n                    changedRange:false,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    if( it+1!==right ){\r\n        const rect1 = {...rects[it+1]};\r\n        const rect2 = {...rects[right]};\r\n        rects[it+1] = rect2;\r\n        rects[right] = rect1;\r\n        values.push({\r\n            left:it+1,\r\n            right:right,\r\n            swap:true,\r\n            changedRange:false,\r\n        })\r\n    }\r\n    return it+1;\r\n}\r\nfunction quick(rects,left,right){\r\n    if( left>=right ) return ;\r\n    const partition = getPartition(rects,left,right);\r\n    quick(rects,left,partition-1);\r\n    quick(rects,partition+1,right);\r\n}","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Recursive Sorting Visualizer</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                            <span style={{color:\"white\"}}>\r\n                                Home\r\n                            </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n    const [state, setState] = React.useState({\r\n        pos: props.pos,\r\n    });\r\n    const handleChange = (event) => {\r\n        console.log(state.pos);\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(state.pos,event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ml-2 mr-2\">\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={0} style={{selected:true}} >Merge Sort</MenuItem>\r\n                    <MenuItem value={1} style={{selected:true}} >Heap Sort</MenuItem>\r\n                    <MenuItem value={2} style={{selected:true}} >Quick Sort</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nconst AirbnbSlider = withStyles({\r\n    root: {\r\n        color: '#3a8589',\r\n        height: 3,\r\n        padding: '13px 0',\r\n    },\r\n    thumb: {\r\n        height: 27,\r\n        width: 27,\r\n        backgroundColor: '#fff',\r\n        border: '1px solid currentColor',\r\n        marginTop: -12,\r\n        marginLeft: -13,\r\n        boxShadow: '#ebebeb 0 2px 2px',\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: '#ccc 0 2px 3px 1px',\r\n        },\r\n        '& .bar': {\r\n            // display: inline-block !important;\r\n            height: 9,\r\n            width: 1,\r\n            backgroundColor: 'currentColor',\r\n            marginLeft: 1,\r\n            marginRight: 1,\r\n        },\r\n    },\r\n    active: {},\r\n    track: {\r\n        height: 3,\r\n    },\r\n    rail: {\r\n        color: '#ffffff',\r\n        opacity: 1,\r\n        height: 3,\r\n    },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n    return (\r\n        <span {...props}>\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n    </span>\r\n    );\r\n}\r\n\r\nexport default function CustomizedSlider() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography gutterBottom>Airbnb</Typography>\r\n            <AirbnbSlider\r\n                ThumbComponent={AirbnbThumbComponent}\r\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\r\n                defaultValue={[20, 40]}\r\n                valueLabelDisplay=\"on\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CSlider\r\n                disabled={props.disable}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"off\"\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Value range\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport CustomizedSlider from \"./airBnbSlider\";\r\nimport RangeSlider from \"./doubleSlider\";\r\nimport SwitchLabels from \"./formControlLabel\";\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-secondary m-2'\r\n                    onClick={this.props.onRandomize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Randomize\r\n                </button>\r\n\r\n                <RangeSlider\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={20}\r\n                    min={10}\r\n                    max={100}\r\n                    step={10}\r\n                    title=\"Numbers\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={10}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                    disable={false}\r\n                />\r\n                <SimpleSelect\r\n                    pos={0}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <button\r\n                    className='btn btn-warning btn-lg '\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport Rects from \"./rects\";\r\nimport mergeSort from '../algorithms/mergeSort';\r\nimport heapSort from \"../algorithms/heapSort\";\r\nimport {quickSortRecursive} from \"../algorithms/quickSortRecursive\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\n\r\nclass RecursiveSort extends Component {\r\n    state = {\r\n        count: 20,\r\n        rects: [],\r\n        speed: 50,\r\n        isRunning: false,\r\n        algo: 0\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var rects = getInitialRects(this.state.count);\r\n        this.setState({rects});\r\n        /* var rects2 = rects.slice();\r\n         console.log(rects2);\r\n         rects = mergeSort(rects);\r\n         console.log(rects);*/\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar/>\r\n                <Menu\r\n                    disable={this.state.isRunning}\r\n                    onViusalize={this.handleSort}\r\n                    onRandomize={this.handleRandomize}\r\n                    onRefresh={this.handleRefresh}\r\n                    onCountChange={this.handleCountChange}\r\n                    onAlgoChanged={this.handleAlgoChanged}\r\n                    onSpeedChange={this.handleSpeedChanged}\r\n                />\r\n                <div className=' justify-content-center'>\r\n                    <Rects\r\n                        rects={this.state.rects}\r\n                    />\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    handleRandomize = () => {\r\n        const rect = getInitialRects(this.state.count);\r\n        this.setState({rects: rect});\r\n    }\r\n    handleRefresh = () => {\r\n        const rects = this.state.rects;\r\n        for (let i = 0; i < rects.length; i++) {\r\n            const rect = {...rects[i], isSorted: false, isSorting: false}\r\n            rects[i] = rect;\r\n        }\r\n        this.setState({rects});\r\n    }\r\n    handleCountChange = (val) => {\r\n        this.setState({count: val});\r\n        this.handleRandomize();\r\n    }\r\n    handleAlgoChanged = (pos, val) => {\r\n        if (pos === 0) {\r\n            console.log(\"sup 0\");\r\n            this.setState({algo: val});\r\n        }\r\n    }\r\n    handleSpeedChanged = (val) => {\r\n        const speed = (110 - val);\r\n        this.setState({speed});\r\n    }\r\n\r\n    handleSort = () => {\r\n\r\n        this.setState({isRunning: true});\r\n        let steps;\r\n        let rects2;\r\n        switch (this.state.algo) {\r\n\r\n            case 0:\r\n                steps = mergeSort(this.state.rects);\r\n                this.handleMerge(steps);\r\n                break;\r\n            case 1:\r\n                rects2 = this.state.rects.slice();\r\n                steps = heapSort(rects2);\r\n                this.handleHeap(steps);\r\n                break;\r\n            case 2:\r\n                rects2 = this.state.rects.slice();\r\n                steps = quickSortRecursive(rects2);\r\n                this.handleQuick(steps);\r\n                break;\r\n            default:\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleQuick = async (steps) =>{\r\n        this.setState({isRunning: true});\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n        let hasChanged = -1;\r\n        let changed;\r\n        for(let i=0;i<steps.length;i++){\r\n            let step = steps[i];\r\n            if( hasChanged!==-1 ){\r\n                let {left,right} = changed;\r\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n                prevRect[right] = {...prevRect[right], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n            }\r\n            if( step.changedRange ){\r\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n                let {left,right} = step;\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n                }\r\n                for (let j = left; j <=right; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:true,isRange:true};\r\n                }\r\n                this.setState({rects: prevRect});\r\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false};\r\n                }\r\n            }else if(step.swap){\r\n                let {left,right} = step;\r\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: true,isRight:false,isRange:false};\r\n                prevRect[right] = {...prevRect[right], isLeft: true,isSorting: false,isRight:false,isRange:false};\r\n                let temp = prevRect[left];\r\n                prevRect[left] = prevRect[right];\r\n                prevRect[right] = temp;\r\n                hasChanged = 1;\r\n                changed = step;\r\n            }\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            if (i === steps.length - 1) {\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: false,isRange:false};\r\n                }\r\n                this.setState({rects: prevRect});\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: true,isRange:false};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(10);\r\n                }\r\n                this.setState({isRunning: false,rects: prevRect});\r\n            }\r\n        }\r\n    }\r\n    handleHeap = async (steps) =>{\r\n        this.setState({isRunning: true});\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n\r\n        for(let i = 0;i<steps.length;i++){\r\n            let step = steps[i];\r\n            //   console.log(step);\r\n            for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\r\n            }\r\n            let {left,right,sorted} = step;\r\n            prevRect[left] = {...prevRect[left],isLeft:true};\r\n            prevRect[right] = {...prevRect[right],isRight:true};\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            let temp = prevRect[left];\r\n            prevRect[left] = prevRect[right];\r\n            prevRect[right] = temp;\r\n            this.setState({rects: prevRect});\r\n            if( sorted ) prevRect[left] = {...prevRect[left],isSorted: true};\r\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n            if (i === steps.length - 1) {\r\n\r\n                for (let i = 0; i < this.state.count; i++) {\r\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(this.state.speed);\r\n                }\r\n                this.setState({isRunning: false,rects: prevRect});\r\n            }\r\n        }\r\n    }\r\n    handleMerge = async (steps) => {\r\n        this.setState({isRunning1: true});\r\n\r\n        const {speed} = this.state;\r\n\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n        await sleep(this.state.speed);\r\n      //  console.log(\"steps \", steps.length);\r\n        for (let ii = 0; ii < steps.length; ii++) {\r\n            let step = steps[ii];\r\n            for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\r\n            }\r\n           // console.log(step.left,\" \",step.mid,\" \",step.right);\r\n            for (let i = step.left; i <= step.mid; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: true,isSorting: false};\r\n            }\r\n            for (let i = step.mid + 1; i <= step.right; i++) {\r\n                prevRect[i] = {...prevRect[i], isRight: true,isLeft:false,isSorting: false};\r\n            }\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n          //  console.log(step);\r\n            for(let i= step.left;i<=step.right;i++){\r\n                prevRect[i] = {...prevRect[i],width:step.val[i-step.left].width,isSorting: true };\r\n                this.setState({rects: prevRect});\r\n                await sleep(this.state.speed);\r\n            }\r\n\r\n            if (ii === steps.length - 1) {\r\n\r\n                for (let i = 0; i < this.state.count; i++) {\r\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(this.state.speed);\r\n                }\r\n                this.setState({isRunning: false});\r\n            }\r\n\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            prevRect = this.state.rects;\r\n          /*  for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: false};\r\n            }*/\r\n            this.setState({rects: prevRect});\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst getInitialRects = (tot) => {\r\n    const rects = [];\r\n    for (let i = 0; i < tot; i++) {\r\n        rects.push(getRect());\r\n    }\r\n    return rects;\r\n}\r\nconst getRect = () => {\r\n    return {\r\n        width: Math.floor(Math.random() * 200) + 50,\r\n        isSorted: false,\r\n        isSorting: false,\r\n        isLeft: false,\r\n        isRight: false\r\n    }\r\n}\r\n\r\nexport default RecursiveSort;","import React, {Component} from 'react';\r\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Pathfinder from \"./pathfinderComponents/pathfinder\";\r\nimport Home from \"./homeComponents/home\";\r\nimport Seive from \"./primeComponents/seive\";\r\nimport Sort from \"./sortComponents/sort\";\r\nimport Queen from \"./queenComponents/queen\";\r\nimport ConvexHull from \"./convexHullComponents/convexHull\";\r\nimport BinarySearch from \"./binarySearchComponent/binarySearch\";\r\nimport RecursiveSort from \"./recursiveSortComponents/recursiveSort\";\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    componentDidMount() {\r\n        console.log(window.innerHeight,\"  \",window.innerWidth);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router basename='/'>\r\n                <Switch>\r\n                    <Route path='/pathfinder'  component={Pathfinder}/>\r\n                    <Route path='/prime' component={Seive}/>\r\n                    <Route path='/sort' component={Sort}/>\r\n                    <Route path='/nqueen' component={Queen}/>\r\n                    <Route path='/convexhull' component={ConvexHull}/>\r\n                    <Route path='/binarysearch' component={BinarySearch}/>\r\n                    <Route path='/recursivesort' component={RecursiveSort}/>\r\n                    <Route path='/' component={Home}/>\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'fontsource-roboto';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}